/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
)

// checks if the UpdateResourceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateResourceRequest{}

// UpdateResourceRequest struct for UpdateResourceRequest
type UpdateResourceRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	// The updated name of the resource.
	Name *string `json:"name,omitempty"`
	// The updated access token TTL in seconds.
	AccessTokenTtl *float32 `json:"accessTokenTtl,omitempty"`
}

// NewUpdateResourceRequest instantiates a new UpdateResourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateResourceRequest() *UpdateResourceRequest {
	this := UpdateResourceRequest{}
	return &this
}

// NewUpdateResourceRequestWithDefaults instantiates a new UpdateResourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateResourceRequestWithDefaults() *UpdateResourceRequest {
	this := UpdateResourceRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *UpdateResourceRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateResourceRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *UpdateResourceRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *UpdateResourceRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateResourceRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateResourceRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateResourceRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateResourceRequest) SetName(v string) {
	o.Name = &v
}

// GetAccessTokenTtl returns the AccessTokenTtl field value if set, zero value otherwise.
func (o *UpdateResourceRequest) GetAccessTokenTtl() float32 {
	if o == nil || IsNil(o.AccessTokenTtl) {
		var ret float32
		return ret
	}
	return *o.AccessTokenTtl
}

// GetAccessTokenTtlOk returns a tuple with the AccessTokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateResourceRequest) GetAccessTokenTtlOk() (*float32, bool) {
	if o == nil || IsNil(o.AccessTokenTtl) {
		return nil, false
	}
	return o.AccessTokenTtl, true
}

// HasAccessTokenTtl returns a boolean if a field has been set.
func (o *UpdateResourceRequest) HasAccessTokenTtl() bool {
	if o != nil && !IsNil(o.AccessTokenTtl) {
		return true
	}

	return false
}

// SetAccessTokenTtl gets a reference to the given float32 and assigns it to the AccessTokenTtl field.
func (o *UpdateResourceRequest) SetAccessTokenTtl(v float32) {
	o.AccessTokenTtl = &v
}

func (o UpdateResourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateResourceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.AccessTokenTtl) {
		toSerialize["accessTokenTtl"] = o.AccessTokenTtl
	}
	return toSerialize, nil
}

type NullableUpdateResourceRequest struct {
	value *UpdateResourceRequest
	isSet bool
}

func (v NullableUpdateResourceRequest) Get() *UpdateResourceRequest {
	return v.value
}

func (v *NullableUpdateResourceRequest) Set(val *UpdateResourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateResourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateResourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateResourceRequest(val *UpdateResourceRequest) *NullableUpdateResourceRequest {
	return &NullableUpdateResourceRequest{value: val, isSet: true}
}

func (v NullableUpdateResourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateResourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


