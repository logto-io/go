/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListDomains200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListDomains200ResponseInner{}

// ListDomains200ResponseInner struct for ListDomains200ResponseInner
type ListDomains200ResponseInner struct {
	Id string `json:"id"`
	Domain string `json:"domain"`
	Status string `json:"status"`
	ErrorMessage NullableString `json:"errorMessage"`
	DnsRecords []ListApplications200ResponseInnerProtectedAppMetadataCustomDomainsInnerDnsRecordsInner `json:"dnsRecords"`
}

type _ListDomains200ResponseInner ListDomains200ResponseInner

// NewListDomains200ResponseInner instantiates a new ListDomains200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListDomains200ResponseInner(id string, domain string, status string, errorMessage NullableString, dnsRecords []ListApplications200ResponseInnerProtectedAppMetadataCustomDomainsInnerDnsRecordsInner) *ListDomains200ResponseInner {
	this := ListDomains200ResponseInner{}
	this.Id = id
	this.Domain = domain
	this.Status = status
	this.ErrorMessage = errorMessage
	this.DnsRecords = dnsRecords
	return &this
}

// NewListDomains200ResponseInnerWithDefaults instantiates a new ListDomains200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListDomains200ResponseInnerWithDefaults() *ListDomains200ResponseInner {
	this := ListDomains200ResponseInner{}
	return &this
}

// GetId returns the Id field value
func (o *ListDomains200ResponseInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListDomains200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListDomains200ResponseInner) SetId(v string) {
	o.Id = v
}

// GetDomain returns the Domain field value
func (o *ListDomains200ResponseInner) GetDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Domain
}

// GetDomainOk returns a tuple with the Domain field value
// and a boolean to check if the value has been set.
func (o *ListDomains200ResponseInner) GetDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Domain, true
}

// SetDomain sets field value
func (o *ListDomains200ResponseInner) SetDomain(v string) {
	o.Domain = v
}

// GetStatus returns the Status field value
func (o *ListDomains200ResponseInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ListDomains200ResponseInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ListDomains200ResponseInner) SetStatus(v string) {
	o.Status = v
}

// GetErrorMessage returns the ErrorMessage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ListDomains200ResponseInner) GetErrorMessage() string {
	if o == nil || o.ErrorMessage.Get() == nil {
		var ret string
		return ret
	}

	return *o.ErrorMessage.Get()
}

// GetErrorMessageOk returns a tuple with the ErrorMessage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ListDomains200ResponseInner) GetErrorMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorMessage.Get(), o.ErrorMessage.IsSet()
}

// SetErrorMessage sets field value
func (o *ListDomains200ResponseInner) SetErrorMessage(v string) {
	o.ErrorMessage.Set(&v)
}

// GetDnsRecords returns the DnsRecords field value
func (o *ListDomains200ResponseInner) GetDnsRecords() []ListApplications200ResponseInnerProtectedAppMetadataCustomDomainsInnerDnsRecordsInner {
	if o == nil {
		var ret []ListApplications200ResponseInnerProtectedAppMetadataCustomDomainsInnerDnsRecordsInner
		return ret
	}

	return o.DnsRecords
}

// GetDnsRecordsOk returns a tuple with the DnsRecords field value
// and a boolean to check if the value has been set.
func (o *ListDomains200ResponseInner) GetDnsRecordsOk() ([]ListApplications200ResponseInnerProtectedAppMetadataCustomDomainsInnerDnsRecordsInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.DnsRecords, true
}

// SetDnsRecords sets field value
func (o *ListDomains200ResponseInner) SetDnsRecords(v []ListApplications200ResponseInnerProtectedAppMetadataCustomDomainsInnerDnsRecordsInner) {
	o.DnsRecords = v
}

func (o ListDomains200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListDomains200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["domain"] = o.Domain
	toSerialize["status"] = o.Status
	toSerialize["errorMessage"] = o.ErrorMessage.Get()
	toSerialize["dnsRecords"] = o.DnsRecords
	return toSerialize, nil
}

func (o *ListDomains200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"domain",
		"status",
		"errorMessage",
		"dnsRecords",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListDomains200ResponseInner := _ListDomains200ResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListDomains200ResponseInner)

	if err != nil {
		return err
	}

	*o = ListDomains200ResponseInner(varListDomains200ResponseInner)

	return err
}

type NullableListDomains200ResponseInner struct {
	value *ListDomains200ResponseInner
	isSet bool
}

func (v NullableListDomains200ResponseInner) Get() *ListDomains200ResponseInner {
	return v.value
}

func (v *NullableListDomains200ResponseInner) Set(val *ListDomains200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListDomains200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListDomains200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListDomains200ResponseInner(val *ListDomains200ResponseInner) *NullableListDomains200ResponseInner {
	return &NullableListDomains200ResponseInner{value: val, isSet: true}
}

func (v NullableListDomains200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListDomains200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


