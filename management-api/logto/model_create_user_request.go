/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
)

// checks if the CreateUserRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserRequest{}

// CreateUserRequest User data to create a new user. All properties are optional.
type CreateUserRequest struct {
	// Primary phone number for the user. It should be unique across all users.
	PrimaryPhone *string `json:"primaryPhone,omitempty" validate:"regexp=^\\\\d+$"`
	// Primary email address for the user. It should be unique across all users.
	PrimaryEmail *string `json:"primaryEmail,omitempty" validate:"regexp=^\\\\S+@\\\\S+\\\\.\\\\S+$"`
	// Username for the user. It should be unique across all users.
	Username *string `json:"username,omitempty" validate:"regexp=^[A-Z_a-z]\\\\w*$"`
	// Plain text password for the user.
	Password *string `json:"password,omitempty"`
	// In case you already have the password digests and not the passwords, you can use them for the newly created user via this property. The value should be generated with one of the supported algorithms. The algorithm can be specified using the `passwordAlgorithm` property.
	PasswordDigest *string `json:"passwordDigest,omitempty"`
	// The hash algorithm used for the password. It should be one of the supported algorithms: argon2, md5, sha1, sha256. Should the encryption algorithm differ from argon2, it will automatically be upgraded to argon2 upon the user's next sign-in.
	PasswordAlgorithm *string `json:"passwordAlgorithm,omitempty"`
	Name *string `json:"name,omitempty"`
	Avatar NullableUpdateUserRequestAvatar `json:"avatar,omitempty"`
	// arbitrary
	CustomData map[string]interface{} `json:"customData,omitempty"`
	Profile *GetJwtCustomizer200ResponseOneOfContextSampleUserProfile `json:"profile,omitempty"`
}

// NewCreateUserRequest instantiates a new CreateUserRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserRequest() *CreateUserRequest {
	this := CreateUserRequest{}
	return &this
}

// NewCreateUserRequestWithDefaults instantiates a new CreateUserRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserRequestWithDefaults() *CreateUserRequest {
	this := CreateUserRequest{}
	return &this
}

// GetPrimaryPhone returns the PrimaryPhone field value if set, zero value otherwise.
func (o *CreateUserRequest) GetPrimaryPhone() string {
	if o == nil || IsNil(o.PrimaryPhone) {
		var ret string
		return ret
	}
	return *o.PrimaryPhone
}

// GetPrimaryPhoneOk returns a tuple with the PrimaryPhone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetPrimaryPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryPhone) {
		return nil, false
	}
	return o.PrimaryPhone, true
}

// HasPrimaryPhone returns a boolean if a field has been set.
func (o *CreateUserRequest) HasPrimaryPhone() bool {
	if o != nil && !IsNil(o.PrimaryPhone) {
		return true
	}

	return false
}

// SetPrimaryPhone gets a reference to the given string and assigns it to the PrimaryPhone field.
func (o *CreateUserRequest) SetPrimaryPhone(v string) {
	o.PrimaryPhone = &v
}

// GetPrimaryEmail returns the PrimaryEmail field value if set, zero value otherwise.
func (o *CreateUserRequest) GetPrimaryEmail() string {
	if o == nil || IsNil(o.PrimaryEmail) {
		var ret string
		return ret
	}
	return *o.PrimaryEmail
}

// GetPrimaryEmailOk returns a tuple with the PrimaryEmail field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetPrimaryEmailOk() (*string, bool) {
	if o == nil || IsNil(o.PrimaryEmail) {
		return nil, false
	}
	return o.PrimaryEmail, true
}

// HasPrimaryEmail returns a boolean if a field has been set.
func (o *CreateUserRequest) HasPrimaryEmail() bool {
	if o != nil && !IsNil(o.PrimaryEmail) {
		return true
	}

	return false
}

// SetPrimaryEmail gets a reference to the given string and assigns it to the PrimaryEmail field.
func (o *CreateUserRequest) SetPrimaryEmail(v string) {
	o.PrimaryEmail = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *CreateUserRequest) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *CreateUserRequest) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *CreateUserRequest) SetUsername(v string) {
	o.Username = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *CreateUserRequest) GetPassword() string {
	if o == nil || IsNil(o.Password) {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.Password) {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *CreateUserRequest) HasPassword() bool {
	if o != nil && !IsNil(o.Password) {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *CreateUserRequest) SetPassword(v string) {
	o.Password = &v
}

// GetPasswordDigest returns the PasswordDigest field value if set, zero value otherwise.
func (o *CreateUserRequest) GetPasswordDigest() string {
	if o == nil || IsNil(o.PasswordDigest) {
		var ret string
		return ret
	}
	return *o.PasswordDigest
}

// GetPasswordDigestOk returns a tuple with the PasswordDigest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetPasswordDigestOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordDigest) {
		return nil, false
	}
	return o.PasswordDigest, true
}

// HasPasswordDigest returns a boolean if a field has been set.
func (o *CreateUserRequest) HasPasswordDigest() bool {
	if o != nil && !IsNil(o.PasswordDigest) {
		return true
	}

	return false
}

// SetPasswordDigest gets a reference to the given string and assigns it to the PasswordDigest field.
func (o *CreateUserRequest) SetPasswordDigest(v string) {
	o.PasswordDigest = &v
}

// GetPasswordAlgorithm returns the PasswordAlgorithm field value if set, zero value otherwise.
func (o *CreateUserRequest) GetPasswordAlgorithm() string {
	if o == nil || IsNil(o.PasswordAlgorithm) {
		var ret string
		return ret
	}
	return *o.PasswordAlgorithm
}

// GetPasswordAlgorithmOk returns a tuple with the PasswordAlgorithm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetPasswordAlgorithmOk() (*string, bool) {
	if o == nil || IsNil(o.PasswordAlgorithm) {
		return nil, false
	}
	return o.PasswordAlgorithm, true
}

// HasPasswordAlgorithm returns a boolean if a field has been set.
func (o *CreateUserRequest) HasPasswordAlgorithm() bool {
	if o != nil && !IsNil(o.PasswordAlgorithm) {
		return true
	}

	return false
}

// SetPasswordAlgorithm gets a reference to the given string and assigns it to the PasswordAlgorithm field.
func (o *CreateUserRequest) SetPasswordAlgorithm(v string) {
	o.PasswordAlgorithm = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateUserRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateUserRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateUserRequest) SetName(v string) {
	o.Name = &v
}

// GetAvatar returns the Avatar field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateUserRequest) GetAvatar() UpdateUserRequestAvatar {
	if o == nil || IsNil(o.Avatar.Get()) {
		var ret UpdateUserRequestAvatar
		return ret
	}
	return *o.Avatar.Get()
}

// GetAvatarOk returns a tuple with the Avatar field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateUserRequest) GetAvatarOk() (*UpdateUserRequestAvatar, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avatar.Get(), o.Avatar.IsSet()
}

// HasAvatar returns a boolean if a field has been set.
func (o *CreateUserRequest) HasAvatar() bool {
	if o != nil && o.Avatar.IsSet() {
		return true
	}

	return false
}

// SetAvatar gets a reference to the given NullableUpdateUserRequestAvatar and assigns it to the Avatar field.
func (o *CreateUserRequest) SetAvatar(v UpdateUserRequestAvatar) {
	o.Avatar.Set(&v)
}
// SetAvatarNil sets the value for Avatar to be an explicit nil
func (o *CreateUserRequest) SetAvatarNil() {
	o.Avatar.Set(nil)
}

// UnsetAvatar ensures that no value is present for Avatar, not even an explicit nil
func (o *CreateUserRequest) UnsetAvatar() {
	o.Avatar.Unset()
}

// GetCustomData returns the CustomData field value if set, zero value otherwise.
func (o *CreateUserRequest) GetCustomData() map[string]interface{} {
	if o == nil || IsNil(o.CustomData) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomData
}

// GetCustomDataOk returns a tuple with the CustomData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetCustomDataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomData) {
		return map[string]interface{}{}, false
	}
	return o.CustomData, true
}

// HasCustomData returns a boolean if a field has been set.
func (o *CreateUserRequest) HasCustomData() bool {
	if o != nil && !IsNil(o.CustomData) {
		return true
	}

	return false
}

// SetCustomData gets a reference to the given map[string]interface{} and assigns it to the CustomData field.
func (o *CreateUserRequest) SetCustomData(v map[string]interface{}) {
	o.CustomData = v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *CreateUserRequest) GetProfile() GetJwtCustomizer200ResponseOneOfContextSampleUserProfile {
	if o == nil || IsNil(o.Profile) {
		var ret GetJwtCustomizer200ResponseOneOfContextSampleUserProfile
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserRequest) GetProfileOk() (*GetJwtCustomizer200ResponseOneOfContextSampleUserProfile, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *CreateUserRequest) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given GetJwtCustomizer200ResponseOneOfContextSampleUserProfile and assigns it to the Profile field.
func (o *CreateUserRequest) SetProfile(v GetJwtCustomizer200ResponseOneOfContextSampleUserProfile) {
	o.Profile = &v
}

func (o CreateUserRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PrimaryPhone) {
		toSerialize["primaryPhone"] = o.PrimaryPhone
	}
	if !IsNil(o.PrimaryEmail) {
		toSerialize["primaryEmail"] = o.PrimaryEmail
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.Password) {
		toSerialize["password"] = o.Password
	}
	if !IsNil(o.PasswordDigest) {
		toSerialize["passwordDigest"] = o.PasswordDigest
	}
	if !IsNil(o.PasswordAlgorithm) {
		toSerialize["passwordAlgorithm"] = o.PasswordAlgorithm
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if o.Avatar.IsSet() {
		toSerialize["avatar"] = o.Avatar.Get()
	}
	if !IsNil(o.CustomData) {
		toSerialize["customData"] = o.CustomData
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	return toSerialize, nil
}

type NullableCreateUserRequest struct {
	value *CreateUserRequest
	isSet bool
}

func (v NullableCreateUserRequest) Get() *CreateUserRequest {
	return v.value
}

func (v *NullableCreateUserRequest) Set(val *CreateUserRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserRequest(val *CreateUserRequest) *NullableCreateUserRequest {
	return &NullableCreateUserRequest{value: val, isSet: true}
}

func (v NullableCreateUserRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


