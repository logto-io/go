/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ApiInteractionConsentGet200ResponseUser type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiInteractionConsentGet200ResponseUser{}

// ApiInteractionConsentGet200ResponseUser struct for ApiInteractionConsentGet200ResponseUser
type ApiInteractionConsentGet200ResponseUser struct {
	Id string `json:"id"`
	Name NullableString `json:"name"`
	Avatar NullableString `json:"avatar"`
	Username NullableString `json:"username"`
	PrimaryEmail NullableString `json:"primaryEmail"`
	PrimaryPhone NullableString `json:"primaryPhone"`
}

type _ApiInteractionConsentGet200ResponseUser ApiInteractionConsentGet200ResponseUser

// NewApiInteractionConsentGet200ResponseUser instantiates a new ApiInteractionConsentGet200ResponseUser object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiInteractionConsentGet200ResponseUser(id string, name NullableString, avatar NullableString, username NullableString, primaryEmail NullableString, primaryPhone NullableString) *ApiInteractionConsentGet200ResponseUser {
	this := ApiInteractionConsentGet200ResponseUser{}
	this.Id = id
	this.Name = name
	this.Avatar = avatar
	this.Username = username
	this.PrimaryEmail = primaryEmail
	this.PrimaryPhone = primaryPhone
	return &this
}

// NewApiInteractionConsentGet200ResponseUserWithDefaults instantiates a new ApiInteractionConsentGet200ResponseUser object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiInteractionConsentGet200ResponseUserWithDefaults() *ApiInteractionConsentGet200ResponseUser {
	this := ApiInteractionConsentGet200ResponseUser{}
	return &this
}

// GetId returns the Id field value
func (o *ApiInteractionConsentGet200ResponseUser) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ApiInteractionConsentGet200ResponseUser) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ApiInteractionConsentGet200ResponseUser) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ApiInteractionConsentGet200ResponseUser) GetName() string {
	if o == nil || o.Name.Get() == nil {
		var ret string
		return ret
	}

	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiInteractionConsentGet200ResponseUser) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// SetName sets field value
func (o *ApiInteractionConsentGet200ResponseUser) SetName(v string) {
	o.Name.Set(&v)
}

// GetAvatar returns the Avatar field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ApiInteractionConsentGet200ResponseUser) GetAvatar() string {
	if o == nil || o.Avatar.Get() == nil {
		var ret string
		return ret
	}

	return *o.Avatar.Get()
}

// GetAvatarOk returns a tuple with the Avatar field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiInteractionConsentGet200ResponseUser) GetAvatarOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Avatar.Get(), o.Avatar.IsSet()
}

// SetAvatar sets field value
func (o *ApiInteractionConsentGet200ResponseUser) SetAvatar(v string) {
	o.Avatar.Set(&v)
}

// GetUsername returns the Username field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ApiInteractionConsentGet200ResponseUser) GetUsername() string {
	if o == nil || o.Username.Get() == nil {
		var ret string
		return ret
	}

	return *o.Username.Get()
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiInteractionConsentGet200ResponseUser) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Username.Get(), o.Username.IsSet()
}

// SetUsername sets field value
func (o *ApiInteractionConsentGet200ResponseUser) SetUsername(v string) {
	o.Username.Set(&v)
}

// GetPrimaryEmail returns the PrimaryEmail field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ApiInteractionConsentGet200ResponseUser) GetPrimaryEmail() string {
	if o == nil || o.PrimaryEmail.Get() == nil {
		var ret string
		return ret
	}

	return *o.PrimaryEmail.Get()
}

// GetPrimaryEmailOk returns a tuple with the PrimaryEmail field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiInteractionConsentGet200ResponseUser) GetPrimaryEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryEmail.Get(), o.PrimaryEmail.IsSet()
}

// SetPrimaryEmail sets field value
func (o *ApiInteractionConsentGet200ResponseUser) SetPrimaryEmail(v string) {
	o.PrimaryEmail.Set(&v)
}

// GetPrimaryPhone returns the PrimaryPhone field value
// If the value is explicit nil, the zero value for string will be returned
func (o *ApiInteractionConsentGet200ResponseUser) GetPrimaryPhone() string {
	if o == nil || o.PrimaryPhone.Get() == nil {
		var ret string
		return ret
	}

	return *o.PrimaryPhone.Get()
}

// GetPrimaryPhoneOk returns a tuple with the PrimaryPhone field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ApiInteractionConsentGet200ResponseUser) GetPrimaryPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrimaryPhone.Get(), o.PrimaryPhone.IsSet()
}

// SetPrimaryPhone sets field value
func (o *ApiInteractionConsentGet200ResponseUser) SetPrimaryPhone(v string) {
	o.PrimaryPhone.Set(&v)
}

func (o ApiInteractionConsentGet200ResponseUser) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiInteractionConsentGet200ResponseUser) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name.Get()
	toSerialize["avatar"] = o.Avatar.Get()
	toSerialize["username"] = o.Username.Get()
	toSerialize["primaryEmail"] = o.PrimaryEmail.Get()
	toSerialize["primaryPhone"] = o.PrimaryPhone.Get()
	return toSerialize, nil
}

func (o *ApiInteractionConsentGet200ResponseUser) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"name",
		"avatar",
		"username",
		"primaryEmail",
		"primaryPhone",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varApiInteractionConsentGet200ResponseUser := _ApiInteractionConsentGet200ResponseUser{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varApiInteractionConsentGet200ResponseUser)

	if err != nil {
		return err
	}

	*o = ApiInteractionConsentGet200ResponseUser(varApiInteractionConsentGet200ResponseUser)

	return err
}

type NullableApiInteractionConsentGet200ResponseUser struct {
	value *ApiInteractionConsentGet200ResponseUser
	isSet bool
}

func (v NullableApiInteractionConsentGet200ResponseUser) Get() *ApiInteractionConsentGet200ResponseUser {
	return v.value
}

func (v *NullableApiInteractionConsentGet200ResponseUser) Set(val *ApiInteractionConsentGet200ResponseUser) {
	v.value = val
	v.isSet = true
}

func (v NullableApiInteractionConsentGet200ResponseUser) IsSet() bool {
	return v.isSet
}

func (v *NullableApiInteractionConsentGet200ResponseUser) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiInteractionConsentGet200ResponseUser(val *ApiInteractionConsentGet200ResponseUser) *NullableApiInteractionConsentGet200ResponseUser {
	return &NullableApiInteractionConsentGet200ResponseUser{value: val, isSet: true}
}

func (v NullableApiInteractionConsentGet200ResponseUser) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiInteractionConsentGet200ResponseUser) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


