/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
)

// checks if the UpdateConnectorRequestMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateConnectorRequestMetadata{}

// UpdateConnectorRequestMetadata Custom connector metadata, will be used to overwrite the default connector metadata.
type UpdateConnectorRequestMetadata struct {
	Target *string `json:"target,omitempty"`
	// Validator function
	Name map[string]interface{} `json:"name,omitempty"`
	Logo *string `json:"logo,omitempty"`
	LogoDark NullableString `json:"logoDark,omitempty"`
}

// NewUpdateConnectorRequestMetadata instantiates a new UpdateConnectorRequestMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateConnectorRequestMetadata() *UpdateConnectorRequestMetadata {
	this := UpdateConnectorRequestMetadata{}
	return &this
}

// NewUpdateConnectorRequestMetadataWithDefaults instantiates a new UpdateConnectorRequestMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateConnectorRequestMetadataWithDefaults() *UpdateConnectorRequestMetadata {
	this := UpdateConnectorRequestMetadata{}
	return &this
}

// GetTarget returns the Target field value if set, zero value otherwise.
func (o *UpdateConnectorRequestMetadata) GetTarget() string {
	if o == nil || IsNil(o.Target) {
		var ret string
		return ret
	}
	return *o.Target
}

// GetTargetOk returns a tuple with the Target field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestMetadata) GetTargetOk() (*string, bool) {
	if o == nil || IsNil(o.Target) {
		return nil, false
	}
	return o.Target, true
}

// HasTarget returns a boolean if a field has been set.
func (o *UpdateConnectorRequestMetadata) HasTarget() bool {
	if o != nil && !IsNil(o.Target) {
		return true
	}

	return false
}

// SetTarget gets a reference to the given string and assigns it to the Target field.
func (o *UpdateConnectorRequestMetadata) SetTarget(v string) {
	o.Target = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateConnectorRequestMetadata) GetName() map[string]interface{} {
	if o == nil || IsNil(o.Name) {
		var ret map[string]interface{}
		return ret
	}
	return o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestMetadata) GetNameOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Name) {
		return map[string]interface{}{}, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateConnectorRequestMetadata) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given map[string]interface{} and assigns it to the Name field.
func (o *UpdateConnectorRequestMetadata) SetName(v map[string]interface{}) {
	o.Name = v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *UpdateConnectorRequestMetadata) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateConnectorRequestMetadata) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *UpdateConnectorRequestMetadata) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *UpdateConnectorRequestMetadata) SetLogo(v string) {
	o.Logo = &v
}

// GetLogoDark returns the LogoDark field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateConnectorRequestMetadata) GetLogoDark() string {
	if o == nil || IsNil(o.LogoDark.Get()) {
		var ret string
		return ret
	}
	return *o.LogoDark.Get()
}

// GetLogoDarkOk returns a tuple with the LogoDark field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateConnectorRequestMetadata) GetLogoDarkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.LogoDark.Get(), o.LogoDark.IsSet()
}

// HasLogoDark returns a boolean if a field has been set.
func (o *UpdateConnectorRequestMetadata) HasLogoDark() bool {
	if o != nil && o.LogoDark.IsSet() {
		return true
	}

	return false
}

// SetLogoDark gets a reference to the given NullableString and assigns it to the LogoDark field.
func (o *UpdateConnectorRequestMetadata) SetLogoDark(v string) {
	o.LogoDark.Set(&v)
}
// SetLogoDarkNil sets the value for LogoDark to be an explicit nil
func (o *UpdateConnectorRequestMetadata) SetLogoDarkNil() {
	o.LogoDark.Set(nil)
}

// UnsetLogoDark ensures that no value is present for LogoDark, not even an explicit nil
func (o *UpdateConnectorRequestMetadata) UnsetLogoDark() {
	o.LogoDark.Unset()
}

func (o UpdateConnectorRequestMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateConnectorRequestMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Target) {
		toSerialize["target"] = o.Target
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if o.LogoDark.IsSet() {
		toSerialize["logoDark"] = o.LogoDark.Get()
	}
	return toSerialize, nil
}

type NullableUpdateConnectorRequestMetadata struct {
	value *UpdateConnectorRequestMetadata
	isSet bool
}

func (v NullableUpdateConnectorRequestMetadata) Get() *UpdateConnectorRequestMetadata {
	return v.value
}

func (v *NullableUpdateConnectorRequestMetadata) Set(val *UpdateConnectorRequestMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateConnectorRequestMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateConnectorRequestMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateConnectorRequestMetadata(val *UpdateConnectorRequestMetadata) *NullableUpdateConnectorRequestMetadata {
	return &NullableUpdateConnectorRequestMetadata{value: val, isSet: true}
}

func (v NullableUpdateConnectorRequestMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateConnectorRequestMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


