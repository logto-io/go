/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListResources200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListResources200ResponseInner{}

// ListResources200ResponseInner struct for ListResources200ResponseInner
type ListResources200ResponseInner struct {
	TenantId string `json:"tenantId"`
	Id string `json:"id"`
	Name string `json:"name"`
	Indicator string `json:"indicator"`
	IsDefault bool `json:"isDefault"`
	AccessTokenTtl float32 `json:"accessTokenTtl"`
	Scopes []ListResources200ResponseInnerScopesInner `json:"scopes,omitempty"`
}

type _ListResources200ResponseInner ListResources200ResponseInner

// NewListResources200ResponseInner instantiates a new ListResources200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListResources200ResponseInner(tenantId string, id string, name string, indicator string, isDefault bool, accessTokenTtl float32) *ListResources200ResponseInner {
	this := ListResources200ResponseInner{}
	this.TenantId = tenantId
	this.Id = id
	this.Name = name
	this.Indicator = indicator
	this.IsDefault = isDefault
	this.AccessTokenTtl = accessTokenTtl
	return &this
}

// NewListResources200ResponseInnerWithDefaults instantiates a new ListResources200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListResources200ResponseInnerWithDefaults() *ListResources200ResponseInner {
	this := ListResources200ResponseInner{}
	return &this
}

// GetTenantId returns the TenantId field value
func (o *ListResources200ResponseInner) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *ListResources200ResponseInner) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *ListResources200ResponseInner) SetTenantId(v string) {
	o.TenantId = v
}

// GetId returns the Id field value
func (o *ListResources200ResponseInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListResources200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListResources200ResponseInner) SetId(v string) {
	o.Id = v
}

// GetName returns the Name field value
func (o *ListResources200ResponseInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ListResources200ResponseInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ListResources200ResponseInner) SetName(v string) {
	o.Name = v
}

// GetIndicator returns the Indicator field value
func (o *ListResources200ResponseInner) GetIndicator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Indicator
}

// GetIndicatorOk returns a tuple with the Indicator field value
// and a boolean to check if the value has been set.
func (o *ListResources200ResponseInner) GetIndicatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Indicator, true
}

// SetIndicator sets field value
func (o *ListResources200ResponseInner) SetIndicator(v string) {
	o.Indicator = v
}

// GetIsDefault returns the IsDefault field value
func (o *ListResources200ResponseInner) GetIsDefault() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsDefault
}

// GetIsDefaultOk returns a tuple with the IsDefault field value
// and a boolean to check if the value has been set.
func (o *ListResources200ResponseInner) GetIsDefaultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsDefault, true
}

// SetIsDefault sets field value
func (o *ListResources200ResponseInner) SetIsDefault(v bool) {
	o.IsDefault = v
}

// GetAccessTokenTtl returns the AccessTokenTtl field value
func (o *ListResources200ResponseInner) GetAccessTokenTtl() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.AccessTokenTtl
}

// GetAccessTokenTtlOk returns a tuple with the AccessTokenTtl field value
// and a boolean to check if the value has been set.
func (o *ListResources200ResponseInner) GetAccessTokenTtlOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessTokenTtl, true
}

// SetAccessTokenTtl sets field value
func (o *ListResources200ResponseInner) SetAccessTokenTtl(v float32) {
	o.AccessTokenTtl = v
}

// GetScopes returns the Scopes field value if set, zero value otherwise.
func (o *ListResources200ResponseInner) GetScopes() []ListResources200ResponseInnerScopesInner {
	if o == nil || IsNil(o.Scopes) {
		var ret []ListResources200ResponseInnerScopesInner
		return ret
	}
	return o.Scopes
}

// GetScopesOk returns a tuple with the Scopes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListResources200ResponseInner) GetScopesOk() ([]ListResources200ResponseInnerScopesInner, bool) {
	if o == nil || IsNil(o.Scopes) {
		return nil, false
	}
	return o.Scopes, true
}

// HasScopes returns a boolean if a field has been set.
func (o *ListResources200ResponseInner) HasScopes() bool {
	if o != nil && !IsNil(o.Scopes) {
		return true
	}

	return false
}

// SetScopes gets a reference to the given []ListResources200ResponseInnerScopesInner and assigns it to the Scopes field.
func (o *ListResources200ResponseInner) SetScopes(v []ListResources200ResponseInnerScopesInner) {
	o.Scopes = v
}

func (o ListResources200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListResources200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantId"] = o.TenantId
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	toSerialize["indicator"] = o.Indicator
	toSerialize["isDefault"] = o.IsDefault
	toSerialize["accessTokenTtl"] = o.AccessTokenTtl
	if !IsNil(o.Scopes) {
		toSerialize["scopes"] = o.Scopes
	}
	return toSerialize, nil
}

func (o *ListResources200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
		"id",
		"name",
		"indicator",
		"isDefault",
		"accessTokenTtl",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListResources200ResponseInner := _ListResources200ResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListResources200ResponseInner)

	if err != nil {
		return err
	}

	*o = ListResources200ResponseInner(varListResources200ResponseInner)

	return err
}

type NullableListResources200ResponseInner struct {
	value *ListResources200ResponseInner
	isSet bool
}

func (v NullableListResources200ResponseInner) Get() *ListResources200ResponseInner {
	return v.value
}

func (v *NullableListResources200ResponseInner) Set(val *ListResources200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListResources200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListResources200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListResources200ResponseInner(val *ListResources200ResponseInner) *NullableListResources200ResponseInner {
	return &NullableListResources200ResponseInner{value: val, isSet: true}
}

func (v NullableListResources200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListResources200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


