/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetUserAssetServiceStatus200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetUserAssetServiceStatus200Response{}

// GetUserAssetServiceStatus200Response struct for GetUserAssetServiceStatus200Response
type GetUserAssetServiceStatus200Response struct {
	Status GetUserAssetServiceStatus200ResponseStatus `json:"status"`
	AllowUploadMimeTypes []string `json:"allowUploadMimeTypes,omitempty"`
	MaxUploadFileSize *float32 `json:"maxUploadFileSize,omitempty"`
}

type _GetUserAssetServiceStatus200Response GetUserAssetServiceStatus200Response

// NewGetUserAssetServiceStatus200Response instantiates a new GetUserAssetServiceStatus200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetUserAssetServiceStatus200Response(status GetUserAssetServiceStatus200ResponseStatus) *GetUserAssetServiceStatus200Response {
	this := GetUserAssetServiceStatus200Response{}
	this.Status = status
	return &this
}

// NewGetUserAssetServiceStatus200ResponseWithDefaults instantiates a new GetUserAssetServiceStatus200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetUserAssetServiceStatus200ResponseWithDefaults() *GetUserAssetServiceStatus200Response {
	this := GetUserAssetServiceStatus200Response{}
	return &this
}

// GetStatus returns the Status field value
func (o *GetUserAssetServiceStatus200Response) GetStatus() GetUserAssetServiceStatus200ResponseStatus {
	if o == nil {
		var ret GetUserAssetServiceStatus200ResponseStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GetUserAssetServiceStatus200Response) GetStatusOk() (*GetUserAssetServiceStatus200ResponseStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GetUserAssetServiceStatus200Response) SetStatus(v GetUserAssetServiceStatus200ResponseStatus) {
	o.Status = v
}

// GetAllowUploadMimeTypes returns the AllowUploadMimeTypes field value if set, zero value otherwise.
func (o *GetUserAssetServiceStatus200Response) GetAllowUploadMimeTypes() []string {
	if o == nil || IsNil(o.AllowUploadMimeTypes) {
		var ret []string
		return ret
	}
	return o.AllowUploadMimeTypes
}

// GetAllowUploadMimeTypesOk returns a tuple with the AllowUploadMimeTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAssetServiceStatus200Response) GetAllowUploadMimeTypesOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowUploadMimeTypes) {
		return nil, false
	}
	return o.AllowUploadMimeTypes, true
}

// HasAllowUploadMimeTypes returns a boolean if a field has been set.
func (o *GetUserAssetServiceStatus200Response) HasAllowUploadMimeTypes() bool {
	if o != nil && !IsNil(o.AllowUploadMimeTypes) {
		return true
	}

	return false
}

// SetAllowUploadMimeTypes gets a reference to the given []string and assigns it to the AllowUploadMimeTypes field.
func (o *GetUserAssetServiceStatus200Response) SetAllowUploadMimeTypes(v []string) {
	o.AllowUploadMimeTypes = v
}

// GetMaxUploadFileSize returns the MaxUploadFileSize field value if set, zero value otherwise.
func (o *GetUserAssetServiceStatus200Response) GetMaxUploadFileSize() float32 {
	if o == nil || IsNil(o.MaxUploadFileSize) {
		var ret float32
		return ret
	}
	return *o.MaxUploadFileSize
}

// GetMaxUploadFileSizeOk returns a tuple with the MaxUploadFileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetUserAssetServiceStatus200Response) GetMaxUploadFileSizeOk() (*float32, bool) {
	if o == nil || IsNil(o.MaxUploadFileSize) {
		return nil, false
	}
	return o.MaxUploadFileSize, true
}

// HasMaxUploadFileSize returns a boolean if a field has been set.
func (o *GetUserAssetServiceStatus200Response) HasMaxUploadFileSize() bool {
	if o != nil && !IsNil(o.MaxUploadFileSize) {
		return true
	}

	return false
}

// SetMaxUploadFileSize gets a reference to the given float32 and assigns it to the MaxUploadFileSize field.
func (o *GetUserAssetServiceStatus200Response) SetMaxUploadFileSize(v float32) {
	o.MaxUploadFileSize = &v
}

func (o GetUserAssetServiceStatus200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetUserAssetServiceStatus200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	if !IsNil(o.AllowUploadMimeTypes) {
		toSerialize["allowUploadMimeTypes"] = o.AllowUploadMimeTypes
	}
	if !IsNil(o.MaxUploadFileSize) {
		toSerialize["maxUploadFileSize"] = o.MaxUploadFileSize
	}
	return toSerialize, nil
}

func (o *GetUserAssetServiceStatus200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetUserAssetServiceStatus200Response := _GetUserAssetServiceStatus200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetUserAssetServiceStatus200Response)

	if err != nil {
		return err
	}

	*o = GetUserAssetServiceStatus200Response(varGetUserAssetServiceStatus200Response)

	return err
}

type NullableGetUserAssetServiceStatus200Response struct {
	value *GetUserAssetServiceStatus200Response
	isSet bool
}

func (v NullableGetUserAssetServiceStatus200Response) Get() *GetUserAssetServiceStatus200Response {
	return v.value
}

func (v *NullableGetUserAssetServiceStatus200Response) Set(val *GetUserAssetServiceStatus200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetUserAssetServiceStatus200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetUserAssetServiceStatus200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetUserAssetServiceStatus200Response(val *GetUserAssetServiceStatus200Response) *NullableGetUserAssetServiceStatus200Response {
	return &NullableGetUserAssetServiceStatus200Response{value: val, isSet: true}
}

func (v NullableGetUserAssetServiceStatus200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetUserAssetServiceStatus200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


