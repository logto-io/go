/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetNewUserCounts200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetNewUserCounts200Response{}

// GetNewUserCounts200Response struct for GetNewUserCounts200Response
type GetNewUserCounts200Response struct {
	Today GetNewUserCounts200ResponseToday `json:"today"`
	Last7Days GetNewUserCounts200ResponseToday `json:"last7Days"`
}

type _GetNewUserCounts200Response GetNewUserCounts200Response

// NewGetNewUserCounts200Response instantiates a new GetNewUserCounts200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetNewUserCounts200Response(today GetNewUserCounts200ResponseToday, last7Days GetNewUserCounts200ResponseToday) *GetNewUserCounts200Response {
	this := GetNewUserCounts200Response{}
	this.Today = today
	this.Last7Days = last7Days
	return &this
}

// NewGetNewUserCounts200ResponseWithDefaults instantiates a new GetNewUserCounts200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetNewUserCounts200ResponseWithDefaults() *GetNewUserCounts200Response {
	this := GetNewUserCounts200Response{}
	return &this
}

// GetToday returns the Today field value
func (o *GetNewUserCounts200Response) GetToday() GetNewUserCounts200ResponseToday {
	if o == nil {
		var ret GetNewUserCounts200ResponseToday
		return ret
	}

	return o.Today
}

// GetTodayOk returns a tuple with the Today field value
// and a boolean to check if the value has been set.
func (o *GetNewUserCounts200Response) GetTodayOk() (*GetNewUserCounts200ResponseToday, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Today, true
}

// SetToday sets field value
func (o *GetNewUserCounts200Response) SetToday(v GetNewUserCounts200ResponseToday) {
	o.Today = v
}

// GetLast7Days returns the Last7Days field value
func (o *GetNewUserCounts200Response) GetLast7Days() GetNewUserCounts200ResponseToday {
	if o == nil {
		var ret GetNewUserCounts200ResponseToday
		return ret
	}

	return o.Last7Days
}

// GetLast7DaysOk returns a tuple with the Last7Days field value
// and a boolean to check if the value has been set.
func (o *GetNewUserCounts200Response) GetLast7DaysOk() (*GetNewUserCounts200ResponseToday, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Last7Days, true
}

// SetLast7Days sets field value
func (o *GetNewUserCounts200Response) SetLast7Days(v GetNewUserCounts200ResponseToday) {
	o.Last7Days = v
}

func (o GetNewUserCounts200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetNewUserCounts200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["today"] = o.Today
	toSerialize["last7Days"] = o.Last7Days
	return toSerialize, nil
}

func (o *GetNewUserCounts200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"today",
		"last7Days",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetNewUserCounts200Response := _GetNewUserCounts200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetNewUserCounts200Response)

	if err != nil {
		return err
	}

	*o = GetNewUserCounts200Response(varGetNewUserCounts200Response)

	return err
}

type NullableGetNewUserCounts200Response struct {
	value *GetNewUserCounts200Response
	isSet bool
}

func (v NullableGetNewUserCounts200Response) Get() *GetNewUserCounts200Response {
	return v.value
}

func (v *NullableGetNewUserCounts200Response) Set(val *GetNewUserCounts200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetNewUserCounts200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetNewUserCounts200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetNewUserCounts200Response(val *GetNewUserCounts200Response) *NullableGetNewUserCounts200Response {
	return &NullableGetNewUserCounts200Response{value: val, isSet: true}
}

func (v NullableGetNewUserCounts200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetNewUserCounts200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


