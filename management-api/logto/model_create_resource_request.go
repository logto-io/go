/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateResourceRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateResourceRequest{}

// CreateResourceRequest struct for CreateResourceRequest
type CreateResourceRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	// The name of the resource.
	Name string `json:"name"`
	// The unique resource indicator. Should be a valid URI.
	Indicator string `json:"indicator"`
	// The access token TTL in seconds. It affects the `exp` claim of the access token granted for this resource.
	AccessTokenTtl *float32 `json:"accessTokenTtl,omitempty"`
}

type _CreateResourceRequest CreateResourceRequest

// NewCreateResourceRequest instantiates a new CreateResourceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateResourceRequest(name string, indicator string) *CreateResourceRequest {
	this := CreateResourceRequest{}
	this.Name = name
	this.Indicator = indicator
	var accessTokenTtl float32 = 3600
	this.AccessTokenTtl = &accessTokenTtl
	return &this
}

// NewCreateResourceRequestWithDefaults instantiates a new CreateResourceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateResourceRequestWithDefaults() *CreateResourceRequest {
	this := CreateResourceRequest{}
	var accessTokenTtl float32 = 3600
	this.AccessTokenTtl = &accessTokenTtl
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *CreateResourceRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResourceRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *CreateResourceRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *CreateResourceRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetName returns the Name field value
func (o *CreateResourceRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateResourceRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateResourceRequest) SetName(v string) {
	o.Name = v
}

// GetIndicator returns the Indicator field value
func (o *CreateResourceRequest) GetIndicator() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Indicator
}

// GetIndicatorOk returns a tuple with the Indicator field value
// and a boolean to check if the value has been set.
func (o *CreateResourceRequest) GetIndicatorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Indicator, true
}

// SetIndicator sets field value
func (o *CreateResourceRequest) SetIndicator(v string) {
	o.Indicator = v
}

// GetAccessTokenTtl returns the AccessTokenTtl field value if set, zero value otherwise.
func (o *CreateResourceRequest) GetAccessTokenTtl() float32 {
	if o == nil || IsNil(o.AccessTokenTtl) {
		var ret float32
		return ret
	}
	return *o.AccessTokenTtl
}

// GetAccessTokenTtlOk returns a tuple with the AccessTokenTtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateResourceRequest) GetAccessTokenTtlOk() (*float32, bool) {
	if o == nil || IsNil(o.AccessTokenTtl) {
		return nil, false
	}
	return o.AccessTokenTtl, true
}

// HasAccessTokenTtl returns a boolean if a field has been set.
func (o *CreateResourceRequest) HasAccessTokenTtl() bool {
	if o != nil && !IsNil(o.AccessTokenTtl) {
		return true
	}

	return false
}

// SetAccessTokenTtl gets a reference to the given float32 and assigns it to the AccessTokenTtl field.
func (o *CreateResourceRequest) SetAccessTokenTtl(v float32) {
	o.AccessTokenTtl = &v
}

func (o CreateResourceRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateResourceRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	toSerialize["name"] = o.Name
	toSerialize["indicator"] = o.Indicator
	if !IsNil(o.AccessTokenTtl) {
		toSerialize["accessTokenTtl"] = o.AccessTokenTtl
	}
	return toSerialize, nil
}

func (o *CreateResourceRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"indicator",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateResourceRequest := _CreateResourceRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateResourceRequest)

	if err != nil {
		return err
	}

	*o = CreateResourceRequest(varCreateResourceRequest)

	return err
}

type NullableCreateResourceRequest struct {
	value *CreateResourceRequest
	isSet bool
}

func (v NullableCreateResourceRequest) Get() *CreateResourceRequest {
	return v.value
}

func (v *NullableCreateResourceRequest) Set(val *CreateResourceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateResourceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateResourceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateResourceRequest(val *CreateResourceRequest) *NullableCreateResourceRequest {
	return &NullableCreateResourceRequest{value: val, isSet: true}
}

func (v NullableCreateResourceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateResourceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


