/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetSystemApplicationConfig200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSystemApplicationConfig200Response{}

// GetSystemApplicationConfig200Response struct for GetSystemApplicationConfig200Response
type GetSystemApplicationConfig200Response struct {
	ProtectedApps GetSystemApplicationConfig200ResponseProtectedApps `json:"protectedApps"`
}

type _GetSystemApplicationConfig200Response GetSystemApplicationConfig200Response

// NewGetSystemApplicationConfig200Response instantiates a new GetSystemApplicationConfig200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSystemApplicationConfig200Response(protectedApps GetSystemApplicationConfig200ResponseProtectedApps) *GetSystemApplicationConfig200Response {
	this := GetSystemApplicationConfig200Response{}
	this.ProtectedApps = protectedApps
	return &this
}

// NewGetSystemApplicationConfig200ResponseWithDefaults instantiates a new GetSystemApplicationConfig200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSystemApplicationConfig200ResponseWithDefaults() *GetSystemApplicationConfig200Response {
	this := GetSystemApplicationConfig200Response{}
	return &this
}

// GetProtectedApps returns the ProtectedApps field value
func (o *GetSystemApplicationConfig200Response) GetProtectedApps() GetSystemApplicationConfig200ResponseProtectedApps {
	if o == nil {
		var ret GetSystemApplicationConfig200ResponseProtectedApps
		return ret
	}

	return o.ProtectedApps
}

// GetProtectedAppsOk returns a tuple with the ProtectedApps field value
// and a boolean to check if the value has been set.
func (o *GetSystemApplicationConfig200Response) GetProtectedAppsOk() (*GetSystemApplicationConfig200ResponseProtectedApps, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProtectedApps, true
}

// SetProtectedApps sets field value
func (o *GetSystemApplicationConfig200Response) SetProtectedApps(v GetSystemApplicationConfig200ResponseProtectedApps) {
	o.ProtectedApps = v
}

func (o GetSystemApplicationConfig200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSystemApplicationConfig200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["protectedApps"] = o.ProtectedApps
	return toSerialize, nil
}

func (o *GetSystemApplicationConfig200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"protectedApps",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSystemApplicationConfig200Response := _GetSystemApplicationConfig200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetSystemApplicationConfig200Response)

	if err != nil {
		return err
	}

	*o = GetSystemApplicationConfig200Response(varGetSystemApplicationConfig200Response)

	return err
}

type NullableGetSystemApplicationConfig200Response struct {
	value *GetSystemApplicationConfig200Response
	isSet bool
}

func (v NullableGetSystemApplicationConfig200Response) Get() *GetSystemApplicationConfig200Response {
	return v.value
}

func (v *NullableGetSystemApplicationConfig200Response) Set(val *GetSystemApplicationConfig200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSystemApplicationConfig200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSystemApplicationConfig200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSystemApplicationConfig200Response(val *GetSystemApplicationConfig200Response) *NullableGetSystemApplicationConfig200Response {
	return &NullableGetSystemApplicationConfig200Response{value: val, isSet: true}
}

func (v NullableGetSystemApplicationConfig200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSystemApplicationConfig200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


