/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
)

// checks if the UpdateAccountCenterSettingsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateAccountCenterSettingsRequest{}

// UpdateAccountCenterSettingsRequest struct for UpdateAccountCenterSettingsRequest
type UpdateAccountCenterSettingsRequest struct {
	// Enable or disable the account API.
	Enabled *bool `json:"enabled,omitempty"`
	Fields *UpdateAccountCenterSettingsRequestFields `json:"fields,omitempty"`
}

// NewUpdateAccountCenterSettingsRequest instantiates a new UpdateAccountCenterSettingsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateAccountCenterSettingsRequest() *UpdateAccountCenterSettingsRequest {
	this := UpdateAccountCenterSettingsRequest{}
	return &this
}

// NewUpdateAccountCenterSettingsRequestWithDefaults instantiates a new UpdateAccountCenterSettingsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateAccountCenterSettingsRequestWithDefaults() *UpdateAccountCenterSettingsRequest {
	this := UpdateAccountCenterSettingsRequest{}
	return &this
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *UpdateAccountCenterSettingsRequest) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountCenterSettingsRequest) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *UpdateAccountCenterSettingsRequest) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *UpdateAccountCenterSettingsRequest) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetFields returns the Fields field value if set, zero value otherwise.
func (o *UpdateAccountCenterSettingsRequest) GetFields() UpdateAccountCenterSettingsRequestFields {
	if o == nil || IsNil(o.Fields) {
		var ret UpdateAccountCenterSettingsRequestFields
		return ret
	}
	return *o.Fields
}

// GetFieldsOk returns a tuple with the Fields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateAccountCenterSettingsRequest) GetFieldsOk() (*UpdateAccountCenterSettingsRequestFields, bool) {
	if o == nil || IsNil(o.Fields) {
		return nil, false
	}
	return o.Fields, true
}

// HasFields returns a boolean if a field has been set.
func (o *UpdateAccountCenterSettingsRequest) HasFields() bool {
	if o != nil && !IsNil(o.Fields) {
		return true
	}

	return false
}

// SetFields gets a reference to the given UpdateAccountCenterSettingsRequestFields and assigns it to the Fields field.
func (o *UpdateAccountCenterSettingsRequest) SetFields(v UpdateAccountCenterSettingsRequestFields) {
	o.Fields = &v
}

func (o UpdateAccountCenterSettingsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateAccountCenterSettingsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Fields) {
		toSerialize["fields"] = o.Fields
	}
	return toSerialize, nil
}

type NullableUpdateAccountCenterSettingsRequest struct {
	value *UpdateAccountCenterSettingsRequest
	isSet bool
}

func (v NullableUpdateAccountCenterSettingsRequest) Get() *UpdateAccountCenterSettingsRequest {
	return v.value
}

func (v *NullableUpdateAccountCenterSettingsRequest) Set(val *UpdateAccountCenterSettingsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateAccountCenterSettingsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateAccountCenterSettingsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateAccountCenterSettingsRequest(val *UpdateAccountCenterSettingsRequest) *NullableUpdateAccountCenterSettingsRequest {
	return &NullableUpdateAccountCenterSettingsRequest{value: val, isSet: true}
}

func (v NullableUpdateAccountCenterSettingsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateAccountCenterSettingsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


