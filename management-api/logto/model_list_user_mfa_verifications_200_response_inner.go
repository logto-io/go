/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListUserMfaVerifications200ResponseInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListUserMfaVerifications200ResponseInner{}

// ListUserMfaVerifications200ResponseInner struct for ListUserMfaVerifications200ResponseInner
type ListUserMfaVerifications200ResponseInner struct {
	Id string `json:"id"`
	CreatedAt string `json:"createdAt"`
	Type string `json:"type"`
	Agent *string `json:"agent,omitempty"`
	RemainCodes *float32 `json:"remainCodes,omitempty"`
}

type _ListUserMfaVerifications200ResponseInner ListUserMfaVerifications200ResponseInner

// NewListUserMfaVerifications200ResponseInner instantiates a new ListUserMfaVerifications200ResponseInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListUserMfaVerifications200ResponseInner(id string, createdAt string, type_ string) *ListUserMfaVerifications200ResponseInner {
	this := ListUserMfaVerifications200ResponseInner{}
	this.Id = id
	this.CreatedAt = createdAt
	this.Type = type_
	return &this
}

// NewListUserMfaVerifications200ResponseInnerWithDefaults instantiates a new ListUserMfaVerifications200ResponseInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListUserMfaVerifications200ResponseInnerWithDefaults() *ListUserMfaVerifications200ResponseInner {
	this := ListUserMfaVerifications200ResponseInner{}
	return &this
}

// GetId returns the Id field value
func (o *ListUserMfaVerifications200ResponseInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ListUserMfaVerifications200ResponseInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ListUserMfaVerifications200ResponseInner) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ListUserMfaVerifications200ResponseInner) GetCreatedAt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ListUserMfaVerifications200ResponseInner) GetCreatedAtOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ListUserMfaVerifications200ResponseInner) SetCreatedAt(v string) {
	o.CreatedAt = v
}

// GetType returns the Type field value
func (o *ListUserMfaVerifications200ResponseInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ListUserMfaVerifications200ResponseInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ListUserMfaVerifications200ResponseInner) SetType(v string) {
	o.Type = v
}

// GetAgent returns the Agent field value if set, zero value otherwise.
func (o *ListUserMfaVerifications200ResponseInner) GetAgent() string {
	if o == nil || IsNil(o.Agent) {
		var ret string
		return ret
	}
	return *o.Agent
}

// GetAgentOk returns a tuple with the Agent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserMfaVerifications200ResponseInner) GetAgentOk() (*string, bool) {
	if o == nil || IsNil(o.Agent) {
		return nil, false
	}
	return o.Agent, true
}

// HasAgent returns a boolean if a field has been set.
func (o *ListUserMfaVerifications200ResponseInner) HasAgent() bool {
	if o != nil && !IsNil(o.Agent) {
		return true
	}

	return false
}

// SetAgent gets a reference to the given string and assigns it to the Agent field.
func (o *ListUserMfaVerifications200ResponseInner) SetAgent(v string) {
	o.Agent = &v
}

// GetRemainCodes returns the RemainCodes field value if set, zero value otherwise.
func (o *ListUserMfaVerifications200ResponseInner) GetRemainCodes() float32 {
	if o == nil || IsNil(o.RemainCodes) {
		var ret float32
		return ret
	}
	return *o.RemainCodes
}

// GetRemainCodesOk returns a tuple with the RemainCodes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListUserMfaVerifications200ResponseInner) GetRemainCodesOk() (*float32, bool) {
	if o == nil || IsNil(o.RemainCodes) {
		return nil, false
	}
	return o.RemainCodes, true
}

// HasRemainCodes returns a boolean if a field has been set.
func (o *ListUserMfaVerifications200ResponseInner) HasRemainCodes() bool {
	if o != nil && !IsNil(o.RemainCodes) {
		return true
	}

	return false
}

// SetRemainCodes gets a reference to the given float32 and assigns it to the RemainCodes field.
func (o *ListUserMfaVerifications200ResponseInner) SetRemainCodes(v float32) {
	o.RemainCodes = &v
}

func (o ListUserMfaVerifications200ResponseInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListUserMfaVerifications200ResponseInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["type"] = o.Type
	if !IsNil(o.Agent) {
		toSerialize["agent"] = o.Agent
	}
	if !IsNil(o.RemainCodes) {
		toSerialize["remainCodes"] = o.RemainCodes
	}
	return toSerialize, nil
}

func (o *ListUserMfaVerifications200ResponseInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"createdAt",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListUserMfaVerifications200ResponseInner := _ListUserMfaVerifications200ResponseInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListUserMfaVerifications200ResponseInner)

	if err != nil {
		return err
	}

	*o = ListUserMfaVerifications200ResponseInner(varListUserMfaVerifications200ResponseInner)

	return err
}

type NullableListUserMfaVerifications200ResponseInner struct {
	value *ListUserMfaVerifications200ResponseInner
	isSet bool
}

func (v NullableListUserMfaVerifications200ResponseInner) Get() *ListUserMfaVerifications200ResponseInner {
	return v.value
}

func (v *NullableListUserMfaVerifications200ResponseInner) Set(val *ListUserMfaVerifications200ResponseInner) {
	v.value = val
	v.isSet = true
}

func (v NullableListUserMfaVerifications200ResponseInner) IsSet() bool {
	return v.isSet
}

func (v *NullableListUserMfaVerifications200ResponseInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListUserMfaVerifications200ResponseInner(val *ListUserMfaVerifications200ResponseInner) *NullableListUserMfaVerifications200ResponseInner {
	return &NullableListUserMfaVerifications200ResponseInner{value: val, isSet: true}
}

func (v NullableListUserMfaVerifications200ResponseInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListUserMfaVerifications200ResponseInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


