/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateOrganizationRoleRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOrganizationRoleRequest{}

// CreateOrganizationRoleRequest struct for CreateOrganizationRoleRequest
type CreateOrganizationRoleRequest struct {
	TenantId *string `json:"tenantId,omitempty"`
	// The name of the organization role. It must be unique within the organization template.
	Name string `json:"name"`
	// The description of the organization role.
	Description NullableString `json:"description,omitempty"`
	Type *string `json:"type,omitempty"`
	// An array of organization scope IDs to be assigned to the organization role.
	OrganizationScopeIds []string `json:"organizationScopeIds"`
	// An array of resource scope IDs to be assigned to the organization role.
	ResourceScopeIds []string `json:"resourceScopeIds"`
}

type _CreateOrganizationRoleRequest CreateOrganizationRoleRequest

// NewCreateOrganizationRoleRequest instantiates a new CreateOrganizationRoleRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOrganizationRoleRequest(name string, organizationScopeIds []string, resourceScopeIds []string) *CreateOrganizationRoleRequest {
	this := CreateOrganizationRoleRequest{}
	this.Name = name
	this.OrganizationScopeIds = organizationScopeIds
	this.ResourceScopeIds = resourceScopeIds
	return &this
}

// NewCreateOrganizationRoleRequestWithDefaults instantiates a new CreateOrganizationRoleRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOrganizationRoleRequestWithDefaults() *CreateOrganizationRoleRequest {
	this := CreateOrganizationRoleRequest{}
	return &this
}

// GetTenantId returns the TenantId field value if set, zero value otherwise.
func (o *CreateOrganizationRoleRequest) GetTenantId() string {
	if o == nil || IsNil(o.TenantId) {
		var ret string
		return ret
	}
	return *o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRoleRequest) GetTenantIdOk() (*string, bool) {
	if o == nil || IsNil(o.TenantId) {
		return nil, false
	}
	return o.TenantId, true
}

// HasTenantId returns a boolean if a field has been set.
func (o *CreateOrganizationRoleRequest) HasTenantId() bool {
	if o != nil && !IsNil(o.TenantId) {
		return true
	}

	return false
}

// SetTenantId gets a reference to the given string and assigns it to the TenantId field.
func (o *CreateOrganizationRoleRequest) SetTenantId(v string) {
	o.TenantId = &v
}

// GetName returns the Name field value
func (o *CreateOrganizationRoleRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRoleRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateOrganizationRoleRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateOrganizationRoleRequest) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateOrganizationRoleRequest) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *CreateOrganizationRoleRequest) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *CreateOrganizationRoleRequest) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *CreateOrganizationRoleRequest) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *CreateOrganizationRoleRequest) UnsetDescription() {
	o.Description.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateOrganizationRoleRequest) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRoleRequest) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateOrganizationRoleRequest) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *CreateOrganizationRoleRequest) SetType(v string) {
	o.Type = &v
}

// GetOrganizationScopeIds returns the OrganizationScopeIds field value
func (o *CreateOrganizationRoleRequest) GetOrganizationScopeIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.OrganizationScopeIds
}

// GetOrganizationScopeIdsOk returns a tuple with the OrganizationScopeIds field value
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRoleRequest) GetOrganizationScopeIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationScopeIds, true
}

// SetOrganizationScopeIds sets field value
func (o *CreateOrganizationRoleRequest) SetOrganizationScopeIds(v []string) {
	o.OrganizationScopeIds = v
}

// GetResourceScopeIds returns the ResourceScopeIds field value
func (o *CreateOrganizationRoleRequest) GetResourceScopeIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ResourceScopeIds
}

// GetResourceScopeIdsOk returns a tuple with the ResourceScopeIds field value
// and a boolean to check if the value has been set.
func (o *CreateOrganizationRoleRequest) GetResourceScopeIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceScopeIds, true
}

// SetResourceScopeIds sets field value
func (o *CreateOrganizationRoleRequest) SetResourceScopeIds(v []string) {
	o.ResourceScopeIds = v
}

func (o CreateOrganizationRoleRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOrganizationRoleRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TenantId) {
		toSerialize["tenantId"] = o.TenantId
	}
	toSerialize["name"] = o.Name
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	toSerialize["organizationScopeIds"] = o.OrganizationScopeIds
	toSerialize["resourceScopeIds"] = o.ResourceScopeIds
	return toSerialize, nil
}

func (o *CreateOrganizationRoleRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"organizationScopeIds",
		"resourceScopeIds",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateOrganizationRoleRequest := _CreateOrganizationRoleRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateOrganizationRoleRequest)

	if err != nil {
		return err
	}

	*o = CreateOrganizationRoleRequest(varCreateOrganizationRoleRequest)

	return err
}

type NullableCreateOrganizationRoleRequest struct {
	value *CreateOrganizationRoleRequest
	isSet bool
}

func (v NullableCreateOrganizationRoleRequest) Get() *CreateOrganizationRoleRequest {
	return v.value
}

func (v *NullableCreateOrganizationRoleRequest) Set(val *CreateOrganizationRoleRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOrganizationRoleRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOrganizationRoleRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOrganizationRoleRequest(val *CreateOrganizationRoleRequest) *NullableCreateOrganizationRoleRequest {
	return &NullableCreateOrganizationRoleRequest{value: val, isSet: true}
}

func (v NullableCreateOrganizationRoleRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOrganizationRoleRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


