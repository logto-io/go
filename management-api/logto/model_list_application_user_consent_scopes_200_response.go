/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ListApplicationUserConsentScopes200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListApplicationUserConsentScopes200Response{}

// ListApplicationUserConsentScopes200Response struct for ListApplicationUserConsentScopes200Response
type ListApplicationUserConsentScopes200Response struct {
	// A list of organization scope details assigned to the application.
	OrganizationScopes []ListApplicationUserConsentScopes200ResponseOrganizationScopesInner `json:"organizationScopes"`
	// A list of resource scope details grouped by resource id assigned to the application.
	ResourceScopes []ListApplicationUserConsentScopes200ResponseResourceScopesInner `json:"resourceScopes"`
	// A list of organization resource scope details grouped by resource id assigned to the application.
	OrganizationResourceScopes []ListApplicationUserConsentScopes200ResponseResourceScopesInner `json:"organizationResourceScopes"`
	// A list of user scope enum value assigned to the application.
	UserScopes []string `json:"userScopes"`
}

type _ListApplicationUserConsentScopes200Response ListApplicationUserConsentScopes200Response

// NewListApplicationUserConsentScopes200Response instantiates a new ListApplicationUserConsentScopes200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListApplicationUserConsentScopes200Response(organizationScopes []ListApplicationUserConsentScopes200ResponseOrganizationScopesInner, resourceScopes []ListApplicationUserConsentScopes200ResponseResourceScopesInner, organizationResourceScopes []ListApplicationUserConsentScopes200ResponseResourceScopesInner, userScopes []string) *ListApplicationUserConsentScopes200Response {
	this := ListApplicationUserConsentScopes200Response{}
	this.OrganizationScopes = organizationScopes
	this.ResourceScopes = resourceScopes
	this.OrganizationResourceScopes = organizationResourceScopes
	this.UserScopes = userScopes
	return &this
}

// NewListApplicationUserConsentScopes200ResponseWithDefaults instantiates a new ListApplicationUserConsentScopes200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListApplicationUserConsentScopes200ResponseWithDefaults() *ListApplicationUserConsentScopes200Response {
	this := ListApplicationUserConsentScopes200Response{}
	return &this
}

// GetOrganizationScopes returns the OrganizationScopes field value
func (o *ListApplicationUserConsentScopes200Response) GetOrganizationScopes() []ListApplicationUserConsentScopes200ResponseOrganizationScopesInner {
	if o == nil {
		var ret []ListApplicationUserConsentScopes200ResponseOrganizationScopesInner
		return ret
	}

	return o.OrganizationScopes
}

// GetOrganizationScopesOk returns a tuple with the OrganizationScopes field value
// and a boolean to check if the value has been set.
func (o *ListApplicationUserConsentScopes200Response) GetOrganizationScopesOk() ([]ListApplicationUserConsentScopes200ResponseOrganizationScopesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationScopes, true
}

// SetOrganizationScopes sets field value
func (o *ListApplicationUserConsentScopes200Response) SetOrganizationScopes(v []ListApplicationUserConsentScopes200ResponseOrganizationScopesInner) {
	o.OrganizationScopes = v
}

// GetResourceScopes returns the ResourceScopes field value
func (o *ListApplicationUserConsentScopes200Response) GetResourceScopes() []ListApplicationUserConsentScopes200ResponseResourceScopesInner {
	if o == nil {
		var ret []ListApplicationUserConsentScopes200ResponseResourceScopesInner
		return ret
	}

	return o.ResourceScopes
}

// GetResourceScopesOk returns a tuple with the ResourceScopes field value
// and a boolean to check if the value has been set.
func (o *ListApplicationUserConsentScopes200Response) GetResourceScopesOk() ([]ListApplicationUserConsentScopes200ResponseResourceScopesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceScopes, true
}

// SetResourceScopes sets field value
func (o *ListApplicationUserConsentScopes200Response) SetResourceScopes(v []ListApplicationUserConsentScopes200ResponseResourceScopesInner) {
	o.ResourceScopes = v
}

// GetOrganizationResourceScopes returns the OrganizationResourceScopes field value
func (o *ListApplicationUserConsentScopes200Response) GetOrganizationResourceScopes() []ListApplicationUserConsentScopes200ResponseResourceScopesInner {
	if o == nil {
		var ret []ListApplicationUserConsentScopes200ResponseResourceScopesInner
		return ret
	}

	return o.OrganizationResourceScopes
}

// GetOrganizationResourceScopesOk returns a tuple with the OrganizationResourceScopes field value
// and a boolean to check if the value has been set.
func (o *ListApplicationUserConsentScopes200Response) GetOrganizationResourceScopesOk() ([]ListApplicationUserConsentScopes200ResponseResourceScopesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.OrganizationResourceScopes, true
}

// SetOrganizationResourceScopes sets field value
func (o *ListApplicationUserConsentScopes200Response) SetOrganizationResourceScopes(v []ListApplicationUserConsentScopes200ResponseResourceScopesInner) {
	o.OrganizationResourceScopes = v
}

// GetUserScopes returns the UserScopes field value
func (o *ListApplicationUserConsentScopes200Response) GetUserScopes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UserScopes
}

// GetUserScopesOk returns a tuple with the UserScopes field value
// and a boolean to check if the value has been set.
func (o *ListApplicationUserConsentScopes200Response) GetUserScopesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UserScopes, true
}

// SetUserScopes sets field value
func (o *ListApplicationUserConsentScopes200Response) SetUserScopes(v []string) {
	o.UserScopes = v
}

func (o ListApplicationUserConsentScopes200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListApplicationUserConsentScopes200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["organizationScopes"] = o.OrganizationScopes
	toSerialize["resourceScopes"] = o.ResourceScopes
	toSerialize["organizationResourceScopes"] = o.OrganizationResourceScopes
	toSerialize["userScopes"] = o.UserScopes
	return toSerialize, nil
}

func (o *ListApplicationUserConsentScopes200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"organizationScopes",
		"resourceScopes",
		"organizationResourceScopes",
		"userScopes",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varListApplicationUserConsentScopes200Response := _ListApplicationUserConsentScopes200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varListApplicationUserConsentScopes200Response)

	if err != nil {
		return err
	}

	*o = ListApplicationUserConsentScopes200Response(varListApplicationUserConsentScopes200Response)

	return err
}

type NullableListApplicationUserConsentScopes200Response struct {
	value *ListApplicationUserConsentScopes200Response
	isSet bool
}

func (v NullableListApplicationUserConsentScopes200Response) Get() *ListApplicationUserConsentScopes200Response {
	return v.value
}

func (v *NullableListApplicationUserConsentScopes200Response) Set(val *ListApplicationUserConsentScopes200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableListApplicationUserConsentScopes200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableListApplicationUserConsentScopes200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListApplicationUserConsentScopes200Response(val *ListApplicationUserConsentScopes200Response) *NullableListApplicationUserConsentScopes200Response {
	return &NullableListApplicationUserConsentScopes200Response{value: val, isSet: true}
}

func (v NullableListApplicationUserConsentScopes200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListApplicationUserConsentScopes200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


