/*
Logto API references

Testing CustomPhrasesAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package logto

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/logto-io/go/management-api/logto"
)

func Test_logto_CustomPhrasesAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CustomPhrasesAPIService DeleteCustomPhrase", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var languageTag string

		httpRes, err := apiClient.CustomPhrasesAPI.DeleteCustomPhrase(context.Background(), languageTag).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPhrasesAPIService GetCustomPhrase", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var languageTag string

		resp, httpRes, err := apiClient.CustomPhrasesAPI.GetCustomPhrase(context.Background(), languageTag).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPhrasesAPIService ListCustomPhrases", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.CustomPhrasesAPI.ListCustomPhrases(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CustomPhrasesAPIService ReplaceCustomPhrase", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var languageTag string

		resp, httpRes, err := apiClient.CustomPhrasesAPI.ReplaceCustomPhrase(context.Background(), languageTag).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
