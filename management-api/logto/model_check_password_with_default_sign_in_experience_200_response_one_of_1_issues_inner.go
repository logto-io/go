/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner{}

// CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner struct for CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner
type CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner struct {
	Code string `json:"code"`
	Interpolation map[string]interface{} `json:"interpolation,omitempty"`
}

type _CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner

// NewCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner instantiates a new CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner(code string) *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner {
	this := CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner{}
	this.Code = code
	return &this
}

// NewCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInnerWithDefaults instantiates a new CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInnerWithDefaults() *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner {
	this := CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner{}
	return &this
}

// GetCode returns the Code field value
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) GetCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) GetCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) SetCode(v string) {
	o.Code = v
}

// GetInterpolation returns the Interpolation field value if set, zero value otherwise.
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) GetInterpolation() map[string]interface{} {
	if o == nil || IsNil(o.Interpolation) {
		var ret map[string]interface{}
		return ret
	}
	return o.Interpolation
}

// GetInterpolationOk returns a tuple with the Interpolation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) GetInterpolationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Interpolation) {
		return map[string]interface{}{}, false
	}
	return o.Interpolation, true
}

// HasInterpolation returns a boolean if a field has been set.
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) HasInterpolation() bool {
	if o != nil && !IsNil(o.Interpolation) {
		return true
	}

	return false
}

// SetInterpolation gets a reference to the given map[string]interface{} and assigns it to the Interpolation field.
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) SetInterpolation(v map[string]interface{}) {
	o.Interpolation = v
}

func (o CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	if !IsNil(o.Interpolation) {
		toSerialize["interpolation"] = o.Interpolation
	}
	return toSerialize, nil
}

func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner := _CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner)

	if err != nil {
		return err
	}

	*o = CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner(varCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner)

	return err
}

type NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner struct {
	value *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner
	isSet bool
}

func (v NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) Get() *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner {
	return v.value
}

func (v *NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) Set(val *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner(val *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) *NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner {
	return &NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner{value: val, isSet: true}
}

func (v NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


