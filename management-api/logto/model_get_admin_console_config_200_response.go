/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetAdminConsoleConfig200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAdminConsoleConfig200Response{}

// GetAdminConsoleConfig200Response struct for GetAdminConsoleConfig200Response
type GetAdminConsoleConfig200Response struct {
	SignInExperienceCustomized bool `json:"signInExperienceCustomized"`
	OrganizationCreated bool `json:"organizationCreated"`
	DevelopmentTenantMigrationNotification *GetAdminConsoleConfig200ResponseDevelopmentTenantMigrationNotification `json:"developmentTenantMigrationNotification,omitempty"`
	CheckedChargeNotification *GetAdminConsoleConfig200ResponseCheckedChargeNotification `json:"checkedChargeNotification,omitempty"`
}

type _GetAdminConsoleConfig200Response GetAdminConsoleConfig200Response

// NewGetAdminConsoleConfig200Response instantiates a new GetAdminConsoleConfig200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAdminConsoleConfig200Response(signInExperienceCustomized bool, organizationCreated bool) *GetAdminConsoleConfig200Response {
	this := GetAdminConsoleConfig200Response{}
	this.SignInExperienceCustomized = signInExperienceCustomized
	this.OrganizationCreated = organizationCreated
	return &this
}

// NewGetAdminConsoleConfig200ResponseWithDefaults instantiates a new GetAdminConsoleConfig200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAdminConsoleConfig200ResponseWithDefaults() *GetAdminConsoleConfig200Response {
	this := GetAdminConsoleConfig200Response{}
	return &this
}

// GetSignInExperienceCustomized returns the SignInExperienceCustomized field value
func (o *GetAdminConsoleConfig200Response) GetSignInExperienceCustomized() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.SignInExperienceCustomized
}

// GetSignInExperienceCustomizedOk returns a tuple with the SignInExperienceCustomized field value
// and a boolean to check if the value has been set.
func (o *GetAdminConsoleConfig200Response) GetSignInExperienceCustomizedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SignInExperienceCustomized, true
}

// SetSignInExperienceCustomized sets field value
func (o *GetAdminConsoleConfig200Response) SetSignInExperienceCustomized(v bool) {
	o.SignInExperienceCustomized = v
}

// GetOrganizationCreated returns the OrganizationCreated field value
func (o *GetAdminConsoleConfig200Response) GetOrganizationCreated() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.OrganizationCreated
}

// GetOrganizationCreatedOk returns a tuple with the OrganizationCreated field value
// and a boolean to check if the value has been set.
func (o *GetAdminConsoleConfig200Response) GetOrganizationCreatedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrganizationCreated, true
}

// SetOrganizationCreated sets field value
func (o *GetAdminConsoleConfig200Response) SetOrganizationCreated(v bool) {
	o.OrganizationCreated = v
}

// GetDevelopmentTenantMigrationNotification returns the DevelopmentTenantMigrationNotification field value if set, zero value otherwise.
func (o *GetAdminConsoleConfig200Response) GetDevelopmentTenantMigrationNotification() GetAdminConsoleConfig200ResponseDevelopmentTenantMigrationNotification {
	if o == nil || IsNil(o.DevelopmentTenantMigrationNotification) {
		var ret GetAdminConsoleConfig200ResponseDevelopmentTenantMigrationNotification
		return ret
	}
	return *o.DevelopmentTenantMigrationNotification
}

// GetDevelopmentTenantMigrationNotificationOk returns a tuple with the DevelopmentTenantMigrationNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdminConsoleConfig200Response) GetDevelopmentTenantMigrationNotificationOk() (*GetAdminConsoleConfig200ResponseDevelopmentTenantMigrationNotification, bool) {
	if o == nil || IsNil(o.DevelopmentTenantMigrationNotification) {
		return nil, false
	}
	return o.DevelopmentTenantMigrationNotification, true
}

// HasDevelopmentTenantMigrationNotification returns a boolean if a field has been set.
func (o *GetAdminConsoleConfig200Response) HasDevelopmentTenantMigrationNotification() bool {
	if o != nil && !IsNil(o.DevelopmentTenantMigrationNotification) {
		return true
	}

	return false
}

// SetDevelopmentTenantMigrationNotification gets a reference to the given GetAdminConsoleConfig200ResponseDevelopmentTenantMigrationNotification and assigns it to the DevelopmentTenantMigrationNotification field.
func (o *GetAdminConsoleConfig200Response) SetDevelopmentTenantMigrationNotification(v GetAdminConsoleConfig200ResponseDevelopmentTenantMigrationNotification) {
	o.DevelopmentTenantMigrationNotification = &v
}

// GetCheckedChargeNotification returns the CheckedChargeNotification field value if set, zero value otherwise.
func (o *GetAdminConsoleConfig200Response) GetCheckedChargeNotification() GetAdminConsoleConfig200ResponseCheckedChargeNotification {
	if o == nil || IsNil(o.CheckedChargeNotification) {
		var ret GetAdminConsoleConfig200ResponseCheckedChargeNotification
		return ret
	}
	return *o.CheckedChargeNotification
}

// GetCheckedChargeNotificationOk returns a tuple with the CheckedChargeNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdminConsoleConfig200Response) GetCheckedChargeNotificationOk() (*GetAdminConsoleConfig200ResponseCheckedChargeNotification, bool) {
	if o == nil || IsNil(o.CheckedChargeNotification) {
		return nil, false
	}
	return o.CheckedChargeNotification, true
}

// HasCheckedChargeNotification returns a boolean if a field has been set.
func (o *GetAdminConsoleConfig200Response) HasCheckedChargeNotification() bool {
	if o != nil && !IsNil(o.CheckedChargeNotification) {
		return true
	}

	return false
}

// SetCheckedChargeNotification gets a reference to the given GetAdminConsoleConfig200ResponseCheckedChargeNotification and assigns it to the CheckedChargeNotification field.
func (o *GetAdminConsoleConfig200Response) SetCheckedChargeNotification(v GetAdminConsoleConfig200ResponseCheckedChargeNotification) {
	o.CheckedChargeNotification = &v
}

func (o GetAdminConsoleConfig200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAdminConsoleConfig200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["signInExperienceCustomized"] = o.SignInExperienceCustomized
	toSerialize["organizationCreated"] = o.OrganizationCreated
	if !IsNil(o.DevelopmentTenantMigrationNotification) {
		toSerialize["developmentTenantMigrationNotification"] = o.DevelopmentTenantMigrationNotification
	}
	if !IsNil(o.CheckedChargeNotification) {
		toSerialize["checkedChargeNotification"] = o.CheckedChargeNotification
	}
	return toSerialize, nil
}

func (o *GetAdminConsoleConfig200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"signInExperienceCustomized",
		"organizationCreated",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetAdminConsoleConfig200Response := _GetAdminConsoleConfig200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetAdminConsoleConfig200Response)

	if err != nil {
		return err
	}

	*o = GetAdminConsoleConfig200Response(varGetAdminConsoleConfig200Response)

	return err
}

type NullableGetAdminConsoleConfig200Response struct {
	value *GetAdminConsoleConfig200Response
	isSet bool
}

func (v NullableGetAdminConsoleConfig200Response) Get() *GetAdminConsoleConfig200Response {
	return v.value
}

func (v *NullableGetAdminConsoleConfig200Response) Set(val *GetAdminConsoleConfig200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAdminConsoleConfig200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAdminConsoleConfig200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAdminConsoleConfig200Response(val *GetAdminConsoleConfig200Response) *NullableGetAdminConsoleConfig200Response {
	return &NullableGetAdminConsoleConfig200Response{value: val, isSet: true}
}

func (v NullableGetAdminConsoleConfig200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAdminConsoleConfig200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


