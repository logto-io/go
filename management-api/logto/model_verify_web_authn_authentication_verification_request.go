/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VerifyWebAuthnAuthenticationVerificationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyWebAuthnAuthenticationVerificationRequest{}

// VerifyWebAuthnAuthenticationVerificationRequest struct for VerifyWebAuthnAuthenticationVerificationRequest
type VerifyWebAuthnAuthenticationVerificationRequest struct {
	// The verification ID of the WebAuthn authentication verification record.
	VerificationId string `json:"verificationId"`
	Payload VerifyWebAuthnAuthenticationVerificationRequestPayload `json:"payload"`
}

type _VerifyWebAuthnAuthenticationVerificationRequest VerifyWebAuthnAuthenticationVerificationRequest

// NewVerifyWebAuthnAuthenticationVerificationRequest instantiates a new VerifyWebAuthnAuthenticationVerificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyWebAuthnAuthenticationVerificationRequest(verificationId string, payload VerifyWebAuthnAuthenticationVerificationRequestPayload) *VerifyWebAuthnAuthenticationVerificationRequest {
	this := VerifyWebAuthnAuthenticationVerificationRequest{}
	this.VerificationId = verificationId
	this.Payload = payload
	return &this
}

// NewVerifyWebAuthnAuthenticationVerificationRequestWithDefaults instantiates a new VerifyWebAuthnAuthenticationVerificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyWebAuthnAuthenticationVerificationRequestWithDefaults() *VerifyWebAuthnAuthenticationVerificationRequest {
	this := VerifyWebAuthnAuthenticationVerificationRequest{}
	return &this
}

// GetVerificationId returns the VerificationId field value
func (o *VerifyWebAuthnAuthenticationVerificationRequest) GetVerificationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VerificationId
}

// GetVerificationIdOk returns a tuple with the VerificationId field value
// and a boolean to check if the value has been set.
func (o *VerifyWebAuthnAuthenticationVerificationRequest) GetVerificationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerificationId, true
}

// SetVerificationId sets field value
func (o *VerifyWebAuthnAuthenticationVerificationRequest) SetVerificationId(v string) {
	o.VerificationId = v
}

// GetPayload returns the Payload field value
func (o *VerifyWebAuthnAuthenticationVerificationRequest) GetPayload() VerifyWebAuthnAuthenticationVerificationRequestPayload {
	if o == nil {
		var ret VerifyWebAuthnAuthenticationVerificationRequestPayload
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *VerifyWebAuthnAuthenticationVerificationRequest) GetPayloadOk() (*VerifyWebAuthnAuthenticationVerificationRequestPayload, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *VerifyWebAuthnAuthenticationVerificationRequest) SetPayload(v VerifyWebAuthnAuthenticationVerificationRequestPayload) {
	o.Payload = v
}

func (o VerifyWebAuthnAuthenticationVerificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyWebAuthnAuthenticationVerificationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["verificationId"] = o.VerificationId
	toSerialize["payload"] = o.Payload
	return toSerialize, nil
}

func (o *VerifyWebAuthnAuthenticationVerificationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"verificationId",
		"payload",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerifyWebAuthnAuthenticationVerificationRequest := _VerifyWebAuthnAuthenticationVerificationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerifyWebAuthnAuthenticationVerificationRequest)

	if err != nil {
		return err
	}

	*o = VerifyWebAuthnAuthenticationVerificationRequest(varVerifyWebAuthnAuthenticationVerificationRequest)

	return err
}

type NullableVerifyWebAuthnAuthenticationVerificationRequest struct {
	value *VerifyWebAuthnAuthenticationVerificationRequest
	isSet bool
}

func (v NullableVerifyWebAuthnAuthenticationVerificationRequest) Get() *VerifyWebAuthnAuthenticationVerificationRequest {
	return v.value
}

func (v *NullableVerifyWebAuthnAuthenticationVerificationRequest) Set(val *VerifyWebAuthnAuthenticationVerificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyWebAuthnAuthenticationVerificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyWebAuthnAuthenticationVerificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyWebAuthnAuthenticationVerificationRequest(val *VerifyWebAuthnAuthenticationVerificationRequest) *NullableVerifyWebAuthnAuthenticationVerificationRequest {
	return &NullableVerifyWebAuthnAuthenticationVerificationRequest{value: val, isSet: true}
}

func (v NullableVerifyWebAuthnAuthenticationVerificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyWebAuthnAuthenticationVerificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


