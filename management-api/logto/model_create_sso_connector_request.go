/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateSsoConnectorRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateSsoConnectorRequest{}

// CreateSsoConnectorRequest struct for CreateSsoConnectorRequest
type CreateSsoConnectorRequest struct {
	// arbitrary
	Config map[string]interface{} `json:"config,omitempty"`
	Domains []string `json:"domains,omitempty"`
	Branding *ListOrganizationJitSsoConnectors200ResponseInnerBranding `json:"branding,omitempty"`
	SyncProfile *bool `json:"syncProfile,omitempty"`
	ProviderName string `json:"providerName"`
	ConnectorName string `json:"connectorName"`
}

type _CreateSsoConnectorRequest CreateSsoConnectorRequest

// NewCreateSsoConnectorRequest instantiates a new CreateSsoConnectorRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateSsoConnectorRequest(providerName string, connectorName string) *CreateSsoConnectorRequest {
	this := CreateSsoConnectorRequest{}
	this.ProviderName = providerName
	this.ConnectorName = connectorName
	return &this
}

// NewCreateSsoConnectorRequestWithDefaults instantiates a new CreateSsoConnectorRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateSsoConnectorRequestWithDefaults() *CreateSsoConnectorRequest {
	this := CreateSsoConnectorRequest{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *CreateSsoConnectorRequest) GetConfig() map[string]interface{} {
	if o == nil || IsNil(o.Config) {
		var ret map[string]interface{}
		return ret
	}
	return o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSsoConnectorRequest) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Config) {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *CreateSsoConnectorRequest) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given map[string]interface{} and assigns it to the Config field.
func (o *CreateSsoConnectorRequest) SetConfig(v map[string]interface{}) {
	o.Config = v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *CreateSsoConnectorRequest) GetDomains() []string {
	if o == nil || IsNil(o.Domains) {
		var ret []string
		return ret
	}
	return o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSsoConnectorRequest) GetDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.Domains) {
		return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *CreateSsoConnectorRequest) HasDomains() bool {
	if o != nil && !IsNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given []string and assigns it to the Domains field.
func (o *CreateSsoConnectorRequest) SetDomains(v []string) {
	o.Domains = v
}

// GetBranding returns the Branding field value if set, zero value otherwise.
func (o *CreateSsoConnectorRequest) GetBranding() ListOrganizationJitSsoConnectors200ResponseInnerBranding {
	if o == nil || IsNil(o.Branding) {
		var ret ListOrganizationJitSsoConnectors200ResponseInnerBranding
		return ret
	}
	return *o.Branding
}

// GetBrandingOk returns a tuple with the Branding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSsoConnectorRequest) GetBrandingOk() (*ListOrganizationJitSsoConnectors200ResponseInnerBranding, bool) {
	if o == nil || IsNil(o.Branding) {
		return nil, false
	}
	return o.Branding, true
}

// HasBranding returns a boolean if a field has been set.
func (o *CreateSsoConnectorRequest) HasBranding() bool {
	if o != nil && !IsNil(o.Branding) {
		return true
	}

	return false
}

// SetBranding gets a reference to the given ListOrganizationJitSsoConnectors200ResponseInnerBranding and assigns it to the Branding field.
func (o *CreateSsoConnectorRequest) SetBranding(v ListOrganizationJitSsoConnectors200ResponseInnerBranding) {
	o.Branding = &v
}

// GetSyncProfile returns the SyncProfile field value if set, zero value otherwise.
func (o *CreateSsoConnectorRequest) GetSyncProfile() bool {
	if o == nil || IsNil(o.SyncProfile) {
		var ret bool
		return ret
	}
	return *o.SyncProfile
}

// GetSyncProfileOk returns a tuple with the SyncProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateSsoConnectorRequest) GetSyncProfileOk() (*bool, bool) {
	if o == nil || IsNil(o.SyncProfile) {
		return nil, false
	}
	return o.SyncProfile, true
}

// HasSyncProfile returns a boolean if a field has been set.
func (o *CreateSsoConnectorRequest) HasSyncProfile() bool {
	if o != nil && !IsNil(o.SyncProfile) {
		return true
	}

	return false
}

// SetSyncProfile gets a reference to the given bool and assigns it to the SyncProfile field.
func (o *CreateSsoConnectorRequest) SetSyncProfile(v bool) {
	o.SyncProfile = &v
}

// GetProviderName returns the ProviderName field value
func (o *CreateSsoConnectorRequest) GetProviderName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProviderName
}

// GetProviderNameOk returns a tuple with the ProviderName field value
// and a boolean to check if the value has been set.
func (o *CreateSsoConnectorRequest) GetProviderNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProviderName, true
}

// SetProviderName sets field value
func (o *CreateSsoConnectorRequest) SetProviderName(v string) {
	o.ProviderName = v
}

// GetConnectorName returns the ConnectorName field value
func (o *CreateSsoConnectorRequest) GetConnectorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorName
}

// GetConnectorNameOk returns a tuple with the ConnectorName field value
// and a boolean to check if the value has been set.
func (o *CreateSsoConnectorRequest) GetConnectorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorName, true
}

// SetConnectorName sets field value
func (o *CreateSsoConnectorRequest) SetConnectorName(v string) {
	o.ConnectorName = v
}

func (o CreateSsoConnectorRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateSsoConnectorRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !IsNil(o.Branding) {
		toSerialize["branding"] = o.Branding
	}
	if !IsNil(o.SyncProfile) {
		toSerialize["syncProfile"] = o.SyncProfile
	}
	toSerialize["providerName"] = o.ProviderName
	toSerialize["connectorName"] = o.ConnectorName
	return toSerialize, nil
}

func (o *CreateSsoConnectorRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"providerName",
		"connectorName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateSsoConnectorRequest := _CreateSsoConnectorRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateSsoConnectorRequest)

	if err != nil {
		return err
	}

	*o = CreateSsoConnectorRequest(varCreateSsoConnectorRequest)

	return err
}

type NullableCreateSsoConnectorRequest struct {
	value *CreateSsoConnectorRequest
	isSet bool
}

func (v NullableCreateSsoConnectorRequest) Get() *CreateSsoConnectorRequest {
	return v.value
}

func (v *NullableCreateSsoConnectorRequest) Set(val *CreateSsoConnectorRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateSsoConnectorRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateSsoConnectorRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateSsoConnectorRequest(val *CreateSsoConnectorRequest) *NullableCreateSsoConnectorRequest {
	return &NullableCreateSsoConnectorRequest{value: val, isSet: true}
}

func (v NullableCreateSsoConnectorRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateSsoConnectorRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


