/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateConnectorAuthorizationUri200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConnectorAuthorizationUri200Response{}

// CreateConnectorAuthorizationUri200Response struct for CreateConnectorAuthorizationUri200Response
type CreateConnectorAuthorizationUri200Response struct {
	RedirectTo string `json:"redirectTo"`
	// The URI to navigate for authentication and authorization in the connected social identity provider.
	RedirectUri interface{} `json:"redirectUri,omitempty"`
}

type _CreateConnectorAuthorizationUri200Response CreateConnectorAuthorizationUri200Response

// NewCreateConnectorAuthorizationUri200Response instantiates a new CreateConnectorAuthorizationUri200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnectorAuthorizationUri200Response(redirectTo string) *CreateConnectorAuthorizationUri200Response {
	this := CreateConnectorAuthorizationUri200Response{}
	this.RedirectTo = redirectTo
	return &this
}

// NewCreateConnectorAuthorizationUri200ResponseWithDefaults instantiates a new CreateConnectorAuthorizationUri200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnectorAuthorizationUri200ResponseWithDefaults() *CreateConnectorAuthorizationUri200Response {
	this := CreateConnectorAuthorizationUri200Response{}
	return &this
}

// GetRedirectTo returns the RedirectTo field value
func (o *CreateConnectorAuthorizationUri200Response) GetRedirectTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectTo
}

// GetRedirectToOk returns a tuple with the RedirectTo field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorAuthorizationUri200Response) GetRedirectToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectTo, true
}

// SetRedirectTo sets field value
func (o *CreateConnectorAuthorizationUri200Response) SetRedirectTo(v string) {
	o.RedirectTo = v
}

// GetRedirectUri returns the RedirectUri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateConnectorAuthorizationUri200Response) GetRedirectUri() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}
	return o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateConnectorAuthorizationUri200Response) GetRedirectUriOk() (*interface{}, bool) {
	if o == nil || IsNil(o.RedirectUri) {
		return nil, false
	}
	return &o.RedirectUri, true
}

// HasRedirectUri returns a boolean if a field has been set.
func (o *CreateConnectorAuthorizationUri200Response) HasRedirectUri() bool {
	if o != nil && !IsNil(o.RedirectUri) {
		return true
	}

	return false
}

// SetRedirectUri gets a reference to the given interface{} and assigns it to the RedirectUri field.
func (o *CreateConnectorAuthorizationUri200Response) SetRedirectUri(v interface{}) {
	o.RedirectUri = v
}

func (o CreateConnectorAuthorizationUri200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConnectorAuthorizationUri200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["redirectTo"] = o.RedirectTo
	if o.RedirectUri != nil {
		toSerialize["redirectUri"] = o.RedirectUri
	}
	return toSerialize, nil
}

func (o *CreateConnectorAuthorizationUri200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"redirectTo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateConnectorAuthorizationUri200Response := _CreateConnectorAuthorizationUri200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateConnectorAuthorizationUri200Response)

	if err != nil {
		return err
	}

	*o = CreateConnectorAuthorizationUri200Response(varCreateConnectorAuthorizationUri200Response)

	return err
}

type NullableCreateConnectorAuthorizationUri200Response struct {
	value *CreateConnectorAuthorizationUri200Response
	isSet bool
}

func (v NullableCreateConnectorAuthorizationUri200Response) Get() *CreateConnectorAuthorizationUri200Response {
	return v.value
}

func (v *NullableCreateConnectorAuthorizationUri200Response) Set(val *CreateConnectorAuthorizationUri200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnectorAuthorizationUri200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnectorAuthorizationUri200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnectorAuthorizationUri200Response(val *CreateConnectorAuthorizationUri200Response) *NullableCreateConnectorAuthorizationUri200Response {
	return &NullableCreateConnectorAuthorizationUri200Response{value: val, isSet: true}
}

func (v NullableCreateConnectorAuthorizationUri200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnectorAuthorizationUri200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


