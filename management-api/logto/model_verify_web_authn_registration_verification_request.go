/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VerifyWebAuthnRegistrationVerificationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyWebAuthnRegistrationVerificationRequest{}

// VerifyWebAuthnRegistrationVerificationRequest struct for VerifyWebAuthnRegistrationVerificationRequest
type VerifyWebAuthnRegistrationVerificationRequest struct {
	// The verification ID of the WebAuthn registration record.
	VerificationId string `json:"verificationId"`
	Payload VerifyWebAuthnRegistrationVerificationRequestPayload `json:"payload"`
}

type _VerifyWebAuthnRegistrationVerificationRequest VerifyWebAuthnRegistrationVerificationRequest

// NewVerifyWebAuthnRegistrationVerificationRequest instantiates a new VerifyWebAuthnRegistrationVerificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyWebAuthnRegistrationVerificationRequest(verificationId string, payload VerifyWebAuthnRegistrationVerificationRequestPayload) *VerifyWebAuthnRegistrationVerificationRequest {
	this := VerifyWebAuthnRegistrationVerificationRequest{}
	this.VerificationId = verificationId
	this.Payload = payload
	return &this
}

// NewVerifyWebAuthnRegistrationVerificationRequestWithDefaults instantiates a new VerifyWebAuthnRegistrationVerificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyWebAuthnRegistrationVerificationRequestWithDefaults() *VerifyWebAuthnRegistrationVerificationRequest {
	this := VerifyWebAuthnRegistrationVerificationRequest{}
	return &this
}

// GetVerificationId returns the VerificationId field value
func (o *VerifyWebAuthnRegistrationVerificationRequest) GetVerificationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VerificationId
}

// GetVerificationIdOk returns a tuple with the VerificationId field value
// and a boolean to check if the value has been set.
func (o *VerifyWebAuthnRegistrationVerificationRequest) GetVerificationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerificationId, true
}

// SetVerificationId sets field value
func (o *VerifyWebAuthnRegistrationVerificationRequest) SetVerificationId(v string) {
	o.VerificationId = v
}

// GetPayload returns the Payload field value
func (o *VerifyWebAuthnRegistrationVerificationRequest) GetPayload() VerifyWebAuthnRegistrationVerificationRequestPayload {
	if o == nil {
		var ret VerifyWebAuthnRegistrationVerificationRequestPayload
		return ret
	}

	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value
// and a boolean to check if the value has been set.
func (o *VerifyWebAuthnRegistrationVerificationRequest) GetPayloadOk() (*VerifyWebAuthnRegistrationVerificationRequestPayload, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payload, true
}

// SetPayload sets field value
func (o *VerifyWebAuthnRegistrationVerificationRequest) SetPayload(v VerifyWebAuthnRegistrationVerificationRequestPayload) {
	o.Payload = v
}

func (o VerifyWebAuthnRegistrationVerificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyWebAuthnRegistrationVerificationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["verificationId"] = o.VerificationId
	toSerialize["payload"] = o.Payload
	return toSerialize, nil
}

func (o *VerifyWebAuthnRegistrationVerificationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"verificationId",
		"payload",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerifyWebAuthnRegistrationVerificationRequest := _VerifyWebAuthnRegistrationVerificationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerifyWebAuthnRegistrationVerificationRequest)

	if err != nil {
		return err
	}

	*o = VerifyWebAuthnRegistrationVerificationRequest(varVerifyWebAuthnRegistrationVerificationRequest)

	return err
}

type NullableVerifyWebAuthnRegistrationVerificationRequest struct {
	value *VerifyWebAuthnRegistrationVerificationRequest
	isSet bool
}

func (v NullableVerifyWebAuthnRegistrationVerificationRequest) Get() *VerifyWebAuthnRegistrationVerificationRequest {
	return v.value
}

func (v *NullableVerifyWebAuthnRegistrationVerificationRequest) Set(val *VerifyWebAuthnRegistrationVerificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyWebAuthnRegistrationVerificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyWebAuthnRegistrationVerificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyWebAuthnRegistrationVerificationRequest(val *VerifyWebAuthnRegistrationVerificationRequest) *NullableVerifyWebAuthnRegistrationVerificationRequest {
	return &NullableVerifyWebAuthnRegistrationVerificationRequest{value: val, isSet: true}
}

func (v NullableVerifyWebAuthnRegistrationVerificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyWebAuthnRegistrationVerificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


