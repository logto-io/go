/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetSignInExperienceConfig200ResponseSsoConnectorsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSignInExperienceConfig200ResponseSsoConnectorsInner{}

// GetSignInExperienceConfig200ResponseSsoConnectorsInner struct for GetSignInExperienceConfig200ResponseSsoConnectorsInner
type GetSignInExperienceConfig200ResponseSsoConnectorsInner struct {
	Id string `json:"id"`
	ConnectorName string `json:"connectorName"`
	Logo string `json:"logo"`
	DarkLogo *string `json:"darkLogo,omitempty"`
}

type _GetSignInExperienceConfig200ResponseSsoConnectorsInner GetSignInExperienceConfig200ResponseSsoConnectorsInner

// NewGetSignInExperienceConfig200ResponseSsoConnectorsInner instantiates a new GetSignInExperienceConfig200ResponseSsoConnectorsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSignInExperienceConfig200ResponseSsoConnectorsInner(id string, connectorName string, logo string) *GetSignInExperienceConfig200ResponseSsoConnectorsInner {
	this := GetSignInExperienceConfig200ResponseSsoConnectorsInner{}
	this.Id = id
	this.ConnectorName = connectorName
	this.Logo = logo
	return &this
}

// NewGetSignInExperienceConfig200ResponseSsoConnectorsInnerWithDefaults instantiates a new GetSignInExperienceConfig200ResponseSsoConnectorsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSignInExperienceConfig200ResponseSsoConnectorsInnerWithDefaults() *GetSignInExperienceConfig200ResponseSsoConnectorsInner {
	this := GetSignInExperienceConfig200ResponseSsoConnectorsInner{}
	return &this
}

// GetId returns the Id field value
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) SetId(v string) {
	o.Id = v
}

// GetConnectorName returns the ConnectorName field value
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) GetConnectorName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorName
}

// GetConnectorNameOk returns a tuple with the ConnectorName field value
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) GetConnectorNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorName, true
}

// SetConnectorName sets field value
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) SetConnectorName(v string) {
	o.ConnectorName = v
}

// GetLogo returns the Logo field value
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) GetLogo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Logo
}

// GetLogoOk returns a tuple with the Logo field value
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) GetLogoOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Logo, true
}

// SetLogo sets field value
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) SetLogo(v string) {
	o.Logo = v
}

// GetDarkLogo returns the DarkLogo field value if set, zero value otherwise.
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) GetDarkLogo() string {
	if o == nil || IsNil(o.DarkLogo) {
		var ret string
		return ret
	}
	return *o.DarkLogo
}

// GetDarkLogoOk returns a tuple with the DarkLogo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) GetDarkLogoOk() (*string, bool) {
	if o == nil || IsNil(o.DarkLogo) {
		return nil, false
	}
	return o.DarkLogo, true
}

// HasDarkLogo returns a boolean if a field has been set.
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) HasDarkLogo() bool {
	if o != nil && !IsNil(o.DarkLogo) {
		return true
	}

	return false
}

// SetDarkLogo gets a reference to the given string and assigns it to the DarkLogo field.
func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) SetDarkLogo(v string) {
	o.DarkLogo = &v
}

func (o GetSignInExperienceConfig200ResponseSsoConnectorsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSignInExperienceConfig200ResponseSsoConnectorsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["connectorName"] = o.ConnectorName
	toSerialize["logo"] = o.Logo
	if !IsNil(o.DarkLogo) {
		toSerialize["darkLogo"] = o.DarkLogo
	}
	return toSerialize, nil
}

func (o *GetSignInExperienceConfig200ResponseSsoConnectorsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"connectorName",
		"logo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSignInExperienceConfig200ResponseSsoConnectorsInner := _GetSignInExperienceConfig200ResponseSsoConnectorsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetSignInExperienceConfig200ResponseSsoConnectorsInner)

	if err != nil {
		return err
	}

	*o = GetSignInExperienceConfig200ResponseSsoConnectorsInner(varGetSignInExperienceConfig200ResponseSsoConnectorsInner)

	return err
}

type NullableGetSignInExperienceConfig200ResponseSsoConnectorsInner struct {
	value *GetSignInExperienceConfig200ResponseSsoConnectorsInner
	isSet bool
}

func (v NullableGetSignInExperienceConfig200ResponseSsoConnectorsInner) Get() *GetSignInExperienceConfig200ResponseSsoConnectorsInner {
	return v.value
}

func (v *NullableGetSignInExperienceConfig200ResponseSsoConnectorsInner) Set(val *GetSignInExperienceConfig200ResponseSsoConnectorsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSignInExperienceConfig200ResponseSsoConnectorsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSignInExperienceConfig200ResponseSsoConnectorsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSignInExperienceConfig200ResponseSsoConnectorsInner(val *GetSignInExperienceConfig200ResponseSsoConnectorsInner) *NullableGetSignInExperienceConfig200ResponseSsoConnectorsInner {
	return &NullableGetSignInExperienceConfig200ResponseSsoConnectorsInner{value: val, isSet: true}
}

func (v NullableGetSignInExperienceConfig200ResponseSsoConnectorsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSignInExperienceConfig200ResponseSsoConnectorsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


