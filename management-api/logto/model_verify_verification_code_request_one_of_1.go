/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VerifyVerificationCodeRequestOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyVerificationCodeRequestOneOf1{}

// VerifyVerificationCodeRequestOneOf1 struct for VerifyVerificationCodeRequestOneOf1
type VerifyVerificationCodeRequestOneOf1 struct {
	Phone string `json:"phone" validate:"regexp=^\\\\d+$"`
	VerificationCode string `json:"verificationCode"`
}

type _VerifyVerificationCodeRequestOneOf1 VerifyVerificationCodeRequestOneOf1

// NewVerifyVerificationCodeRequestOneOf1 instantiates a new VerifyVerificationCodeRequestOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyVerificationCodeRequestOneOf1(phone string, verificationCode string) *VerifyVerificationCodeRequestOneOf1 {
	this := VerifyVerificationCodeRequestOneOf1{}
	this.Phone = phone
	this.VerificationCode = verificationCode
	return &this
}

// NewVerifyVerificationCodeRequestOneOf1WithDefaults instantiates a new VerifyVerificationCodeRequestOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyVerificationCodeRequestOneOf1WithDefaults() *VerifyVerificationCodeRequestOneOf1 {
	this := VerifyVerificationCodeRequestOneOf1{}
	return &this
}

// GetPhone returns the Phone field value
func (o *VerifyVerificationCodeRequestOneOf1) GetPhone() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
func (o *VerifyVerificationCodeRequestOneOf1) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Phone, true
}

// SetPhone sets field value
func (o *VerifyVerificationCodeRequestOneOf1) SetPhone(v string) {
	o.Phone = v
}

// GetVerificationCode returns the VerificationCode field value
func (o *VerifyVerificationCodeRequestOneOf1) GetVerificationCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VerificationCode
}

// GetVerificationCodeOk returns a tuple with the VerificationCode field value
// and a boolean to check if the value has been set.
func (o *VerifyVerificationCodeRequestOneOf1) GetVerificationCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerificationCode, true
}

// SetVerificationCode sets field value
func (o *VerifyVerificationCodeRequestOneOf1) SetVerificationCode(v string) {
	o.VerificationCode = v
}

func (o VerifyVerificationCodeRequestOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyVerificationCodeRequestOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["phone"] = o.Phone
	toSerialize["verificationCode"] = o.VerificationCode
	return toSerialize, nil
}

func (o *VerifyVerificationCodeRequestOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"phone",
		"verificationCode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerifyVerificationCodeRequestOneOf1 := _VerifyVerificationCodeRequestOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerifyVerificationCodeRequestOneOf1)

	if err != nil {
		return err
	}

	*o = VerifyVerificationCodeRequestOneOf1(varVerifyVerificationCodeRequestOneOf1)

	return err
}

type NullableVerifyVerificationCodeRequestOneOf1 struct {
	value *VerifyVerificationCodeRequestOneOf1
	isSet bool
}

func (v NullableVerifyVerificationCodeRequestOneOf1) Get() *VerifyVerificationCodeRequestOneOf1 {
	return v.value
}

func (v *NullableVerifyVerificationCodeRequestOneOf1) Set(val *VerifyVerificationCodeRequestOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyVerificationCodeRequestOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyVerificationCodeRequestOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyVerificationCodeRequestOneOf1(val *VerifyVerificationCodeRequestOneOf1) *NullableVerifyVerificationCodeRequestOneOf1 {
	return &NullableVerifyVerificationCodeRequestOneOf1{value: val, isSet: true}
}

func (v NullableVerifyVerificationCodeRequestOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyVerificationCodeRequestOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


