/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions{}

// CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions Options for the user to authenticate with their WebAuthn credential.
type CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions struct {
	Challenge string `json:"challenge"`
	Timeout *float32 `json:"timeout,omitempty"`
	RpId *string `json:"rpId,omitempty"`
	AllowCredentials []CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExcludeCredentialsInner `json:"allowCredentials,omitempty"`
	UserVerification *string `json:"userVerification,omitempty"`
	Extensions *CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExtensions `json:"extensions,omitempty"`
}

type _CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions

// NewCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions instantiates a new CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions(challenge string) *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions {
	this := CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions{}
	this.Challenge = challenge
	return &this
}

// NewCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptionsWithDefaults instantiates a new CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptionsWithDefaults() *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions {
	this := CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions{}
	return &this
}

// GetChallenge returns the Challenge field value
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetChallenge() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Challenge
}

// GetChallengeOk returns a tuple with the Challenge field value
// and a boolean to check if the value has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetChallengeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Challenge, true
}

// SetChallenge sets field value
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) SetChallenge(v string) {
	o.Challenge = v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetTimeout() float32 {
	if o == nil || IsNil(o.Timeout) {
		var ret float32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetTimeoutOk() (*float32, bool) {
	if o == nil || IsNil(o.Timeout) {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) HasTimeout() bool {
	if o != nil && !IsNil(o.Timeout) {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given float32 and assigns it to the Timeout field.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) SetTimeout(v float32) {
	o.Timeout = &v
}

// GetRpId returns the RpId field value if set, zero value otherwise.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetRpId() string {
	if o == nil || IsNil(o.RpId) {
		var ret string
		return ret
	}
	return *o.RpId
}

// GetRpIdOk returns a tuple with the RpId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetRpIdOk() (*string, bool) {
	if o == nil || IsNil(o.RpId) {
		return nil, false
	}
	return o.RpId, true
}

// HasRpId returns a boolean if a field has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) HasRpId() bool {
	if o != nil && !IsNil(o.RpId) {
		return true
	}

	return false
}

// SetRpId gets a reference to the given string and assigns it to the RpId field.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) SetRpId(v string) {
	o.RpId = &v
}

// GetAllowCredentials returns the AllowCredentials field value if set, zero value otherwise.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetAllowCredentials() []CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExcludeCredentialsInner {
	if o == nil || IsNil(o.AllowCredentials) {
		var ret []CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExcludeCredentialsInner
		return ret
	}
	return o.AllowCredentials
}

// GetAllowCredentialsOk returns a tuple with the AllowCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetAllowCredentialsOk() ([]CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExcludeCredentialsInner, bool) {
	if o == nil || IsNil(o.AllowCredentials) {
		return nil, false
	}
	return o.AllowCredentials, true
}

// HasAllowCredentials returns a boolean if a field has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) HasAllowCredentials() bool {
	if o != nil && !IsNil(o.AllowCredentials) {
		return true
	}

	return false
}

// SetAllowCredentials gets a reference to the given []CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExcludeCredentialsInner and assigns it to the AllowCredentials field.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) SetAllowCredentials(v []CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExcludeCredentialsInner) {
	o.AllowCredentials = v
}

// GetUserVerification returns the UserVerification field value if set, zero value otherwise.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetUserVerification() string {
	if o == nil || IsNil(o.UserVerification) {
		var ret string
		return ret
	}
	return *o.UserVerification
}

// GetUserVerificationOk returns a tuple with the UserVerification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetUserVerificationOk() (*string, bool) {
	if o == nil || IsNil(o.UserVerification) {
		return nil, false
	}
	return o.UserVerification, true
}

// HasUserVerification returns a boolean if a field has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) HasUserVerification() bool {
	if o != nil && !IsNil(o.UserVerification) {
		return true
	}

	return false
}

// SetUserVerification gets a reference to the given string and assigns it to the UserVerification field.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) SetUserVerification(v string) {
	o.UserVerification = &v
}

// GetExtensions returns the Extensions field value if set, zero value otherwise.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetExtensions() CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExtensions {
	if o == nil || IsNil(o.Extensions) {
		var ret CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExtensions
		return ret
	}
	return *o.Extensions
}

// GetExtensionsOk returns a tuple with the Extensions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) GetExtensionsOk() (*CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExtensions, bool) {
	if o == nil || IsNil(o.Extensions) {
		return nil, false
	}
	return o.Extensions, true
}

// HasExtensions returns a boolean if a field has been set.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) HasExtensions() bool {
	if o != nil && !IsNil(o.Extensions) {
		return true
	}

	return false
}

// SetExtensions gets a reference to the given CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExtensions and assigns it to the Extensions field.
func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) SetExtensions(v CreateWebAuthnRegistrationVerification200ResponseRegistrationOptionsExtensions) {
	o.Extensions = &v
}

func (o CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["challenge"] = o.Challenge
	if !IsNil(o.Timeout) {
		toSerialize["timeout"] = o.Timeout
	}
	if !IsNil(o.RpId) {
		toSerialize["rpId"] = o.RpId
	}
	if !IsNil(o.AllowCredentials) {
		toSerialize["allowCredentials"] = o.AllowCredentials
	}
	if !IsNil(o.UserVerification) {
		toSerialize["userVerification"] = o.UserVerification
	}
	if !IsNil(o.Extensions) {
		toSerialize["extensions"] = o.Extensions
	}
	return toSerialize, nil
}

func (o *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"challenge",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions := _CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions)

	if err != nil {
		return err
	}

	*o = CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions(varCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions)

	return err
}

type NullableCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions struct {
	value *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions
	isSet bool
}

func (v NullableCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) Get() *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions {
	return v.value
}

func (v *NullableCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) Set(val *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions(val *CreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) *NullableCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions {
	return &NullableCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions{value: val, isSet: true}
}

func (v NullableCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateWebAuthnAuthenticationVerification200ResponseAuthenticationOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


