/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
)

// checks if the GetHasuraAuth200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetHasuraAuth200Response{}

// GetHasuraAuth200Response struct for GetHasuraAuth200Response
type GetHasuraAuth200Response struct {
	XHasuraUserId *string `json:"X-Hasura-User-Id,omitempty"`
	XHasuraRole *string `json:"X-Hasura-Role,omitempty"`
}

// NewGetHasuraAuth200Response instantiates a new GetHasuraAuth200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetHasuraAuth200Response() *GetHasuraAuth200Response {
	this := GetHasuraAuth200Response{}
	return &this
}

// NewGetHasuraAuth200ResponseWithDefaults instantiates a new GetHasuraAuth200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetHasuraAuth200ResponseWithDefaults() *GetHasuraAuth200Response {
	this := GetHasuraAuth200Response{}
	return &this
}

// GetXHasuraUserId returns the XHasuraUserId field value if set, zero value otherwise.
func (o *GetHasuraAuth200Response) GetXHasuraUserId() string {
	if o == nil || IsNil(o.XHasuraUserId) {
		var ret string
		return ret
	}
	return *o.XHasuraUserId
}

// GetXHasuraUserIdOk returns a tuple with the XHasuraUserId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHasuraAuth200Response) GetXHasuraUserIdOk() (*string, bool) {
	if o == nil || IsNil(o.XHasuraUserId) {
		return nil, false
	}
	return o.XHasuraUserId, true
}

// HasXHasuraUserId returns a boolean if a field has been set.
func (o *GetHasuraAuth200Response) HasXHasuraUserId() bool {
	if o != nil && !IsNil(o.XHasuraUserId) {
		return true
	}

	return false
}

// SetXHasuraUserId gets a reference to the given string and assigns it to the XHasuraUserId field.
func (o *GetHasuraAuth200Response) SetXHasuraUserId(v string) {
	o.XHasuraUserId = &v
}

// GetXHasuraRole returns the XHasuraRole field value if set, zero value otherwise.
func (o *GetHasuraAuth200Response) GetXHasuraRole() string {
	if o == nil || IsNil(o.XHasuraRole) {
		var ret string
		return ret
	}
	return *o.XHasuraRole
}

// GetXHasuraRoleOk returns a tuple with the XHasuraRole field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHasuraAuth200Response) GetXHasuraRoleOk() (*string, bool) {
	if o == nil || IsNil(o.XHasuraRole) {
		return nil, false
	}
	return o.XHasuraRole, true
}

// HasXHasuraRole returns a boolean if a field has been set.
func (o *GetHasuraAuth200Response) HasXHasuraRole() bool {
	if o != nil && !IsNil(o.XHasuraRole) {
		return true
	}

	return false
}

// SetXHasuraRole gets a reference to the given string and assigns it to the XHasuraRole field.
func (o *GetHasuraAuth200Response) SetXHasuraRole(v string) {
	o.XHasuraRole = &v
}

func (o GetHasuraAuth200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetHasuraAuth200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.XHasuraUserId) {
		toSerialize["X-Hasura-User-Id"] = o.XHasuraUserId
	}
	if !IsNil(o.XHasuraRole) {
		toSerialize["X-Hasura-Role"] = o.XHasuraRole
	}
	return toSerialize, nil
}

type NullableGetHasuraAuth200Response struct {
	value *GetHasuraAuth200Response
	isSet bool
}

func (v NullableGetHasuraAuth200Response) Get() *GetHasuraAuth200Response {
	return v.value
}

func (v *NullableGetHasuraAuth200Response) Set(val *GetHasuraAuth200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetHasuraAuth200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetHasuraAuth200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetHasuraAuth200Response(val *GetHasuraAuth200Response) *NullableGetHasuraAuth200Response {
	return &NullableGetHasuraAuth200Response{value: val, isSet: true}
}

func (v NullableGetHasuraAuth200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetHasuraAuth200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


