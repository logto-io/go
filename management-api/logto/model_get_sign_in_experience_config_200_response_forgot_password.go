/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetSignInExperienceConfig200ResponseForgotPassword type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSignInExperienceConfig200ResponseForgotPassword{}

// GetSignInExperienceConfig200ResponseForgotPassword struct for GetSignInExperienceConfig200ResponseForgotPassword
type GetSignInExperienceConfig200ResponseForgotPassword struct {
	Phone bool `json:"phone"`
	Email bool `json:"email"`
}

type _GetSignInExperienceConfig200ResponseForgotPassword GetSignInExperienceConfig200ResponseForgotPassword

// NewGetSignInExperienceConfig200ResponseForgotPassword instantiates a new GetSignInExperienceConfig200ResponseForgotPassword object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSignInExperienceConfig200ResponseForgotPassword(phone bool, email bool) *GetSignInExperienceConfig200ResponseForgotPassword {
	this := GetSignInExperienceConfig200ResponseForgotPassword{}
	this.Phone = phone
	this.Email = email
	return &this
}

// NewGetSignInExperienceConfig200ResponseForgotPasswordWithDefaults instantiates a new GetSignInExperienceConfig200ResponseForgotPassword object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSignInExperienceConfig200ResponseForgotPasswordWithDefaults() *GetSignInExperienceConfig200ResponseForgotPassword {
	this := GetSignInExperienceConfig200ResponseForgotPassword{}
	return &this
}

// GetPhone returns the Phone field value
func (o *GetSignInExperienceConfig200ResponseForgotPassword) GetPhone() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseForgotPassword) GetPhoneOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Phone, true
}

// SetPhone sets field value
func (o *GetSignInExperienceConfig200ResponseForgotPassword) SetPhone(v bool) {
	o.Phone = v
}

// GetEmail returns the Email field value
func (o *GetSignInExperienceConfig200ResponseForgotPassword) GetEmail() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseForgotPassword) GetEmailOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *GetSignInExperienceConfig200ResponseForgotPassword) SetEmail(v bool) {
	o.Email = v
}

func (o GetSignInExperienceConfig200ResponseForgotPassword) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSignInExperienceConfig200ResponseForgotPassword) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["phone"] = o.Phone
	toSerialize["email"] = o.Email
	return toSerialize, nil
}

func (o *GetSignInExperienceConfig200ResponseForgotPassword) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"phone",
		"email",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSignInExperienceConfig200ResponseForgotPassword := _GetSignInExperienceConfig200ResponseForgotPassword{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetSignInExperienceConfig200ResponseForgotPassword)

	if err != nil {
		return err
	}

	*o = GetSignInExperienceConfig200ResponseForgotPassword(varGetSignInExperienceConfig200ResponseForgotPassword)

	return err
}

type NullableGetSignInExperienceConfig200ResponseForgotPassword struct {
	value *GetSignInExperienceConfig200ResponseForgotPassword
	isSet bool
}

func (v NullableGetSignInExperienceConfig200ResponseForgotPassword) Get() *GetSignInExperienceConfig200ResponseForgotPassword {
	return v.value
}

func (v *NullableGetSignInExperienceConfig200ResponseForgotPassword) Set(val *GetSignInExperienceConfig200ResponseForgotPassword) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSignInExperienceConfig200ResponseForgotPassword) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSignInExperienceConfig200ResponseForgotPassword) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSignInExperienceConfig200ResponseForgotPassword(val *GetSignInExperienceConfig200ResponseForgotPassword) *NullableGetSignInExperienceConfig200ResponseForgotPassword {
	return &NullableGetSignInExperienceConfig200ResponseForgotPassword{value: val, isSet: true}
}

func (v NullableGetSignInExperienceConfig200ResponseForgotPassword) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSignInExperienceConfig200ResponseForgotPassword) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


