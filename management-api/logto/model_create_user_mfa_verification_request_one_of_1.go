/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateUserMfaVerificationRequestOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateUserMfaVerificationRequestOneOf1{}

// CreateUserMfaVerificationRequestOneOf1 struct for CreateUserMfaVerificationRequestOneOf1
type CreateUserMfaVerificationRequestOneOf1 struct {
	Type string `json:"type"`
	Codes []string `json:"codes,omitempty"`
}

type _CreateUserMfaVerificationRequestOneOf1 CreateUserMfaVerificationRequestOneOf1

// NewCreateUserMfaVerificationRequestOneOf1 instantiates a new CreateUserMfaVerificationRequestOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateUserMfaVerificationRequestOneOf1(type_ string) *CreateUserMfaVerificationRequestOneOf1 {
	this := CreateUserMfaVerificationRequestOneOf1{}
	this.Type = type_
	return &this
}

// NewCreateUserMfaVerificationRequestOneOf1WithDefaults instantiates a new CreateUserMfaVerificationRequestOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateUserMfaVerificationRequestOneOf1WithDefaults() *CreateUserMfaVerificationRequestOneOf1 {
	this := CreateUserMfaVerificationRequestOneOf1{}
	return &this
}

// GetType returns the Type field value
func (o *CreateUserMfaVerificationRequestOneOf1) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CreateUserMfaVerificationRequestOneOf1) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CreateUserMfaVerificationRequestOneOf1) SetType(v string) {
	o.Type = v
}

// GetCodes returns the Codes field value if set, zero value otherwise.
func (o *CreateUserMfaVerificationRequestOneOf1) GetCodes() []string {
	if o == nil || IsNil(o.Codes) {
		var ret []string
		return ret
	}
	return o.Codes
}

// GetCodesOk returns a tuple with the Codes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateUserMfaVerificationRequestOneOf1) GetCodesOk() ([]string, bool) {
	if o == nil || IsNil(o.Codes) {
		return nil, false
	}
	return o.Codes, true
}

// HasCodes returns a boolean if a field has been set.
func (o *CreateUserMfaVerificationRequestOneOf1) HasCodes() bool {
	if o != nil && !IsNil(o.Codes) {
		return true
	}

	return false
}

// SetCodes gets a reference to the given []string and assigns it to the Codes field.
func (o *CreateUserMfaVerificationRequestOneOf1) SetCodes(v []string) {
	o.Codes = v
}

func (o CreateUserMfaVerificationRequestOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateUserMfaVerificationRequestOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	if !IsNil(o.Codes) {
		toSerialize["codes"] = o.Codes
	}
	return toSerialize, nil
}

func (o *CreateUserMfaVerificationRequestOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateUserMfaVerificationRequestOneOf1 := _CreateUserMfaVerificationRequestOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateUserMfaVerificationRequestOneOf1)

	if err != nil {
		return err
	}

	*o = CreateUserMfaVerificationRequestOneOf1(varCreateUserMfaVerificationRequestOneOf1)

	return err
}

type NullableCreateUserMfaVerificationRequestOneOf1 struct {
	value *CreateUserMfaVerificationRequestOneOf1
	isSet bool
}

func (v NullableCreateUserMfaVerificationRequestOneOf1) Get() *CreateUserMfaVerificationRequestOneOf1 {
	return v.value
}

func (v *NullableCreateUserMfaVerificationRequestOneOf1) Set(val *CreateUserMfaVerificationRequestOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateUserMfaVerificationRequestOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateUserMfaVerificationRequestOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateUserMfaVerificationRequestOneOf1(val *CreateUserMfaVerificationRequestOneOf1) *NullableCreateUserMfaVerificationRequestOneOf1 {
	return &NullableCreateUserMfaVerificationRequestOneOf1{value: val, isSet: true}
}

func (v NullableCreateUserMfaVerificationRequestOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateUserMfaVerificationRequestOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


