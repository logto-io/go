/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CheckPasswordWithDefaultSignInExperience200ResponseOneOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckPasswordWithDefaultSignInExperience200ResponseOneOf1{}

// CheckPasswordWithDefaultSignInExperience200ResponseOneOf1 struct for CheckPasswordWithDefaultSignInExperience200ResponseOneOf1
type CheckPasswordWithDefaultSignInExperience200ResponseOneOf1 struct {
	Result bool `json:"result"`
	Issues []CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner `json:"issues"`
}

type _CheckPasswordWithDefaultSignInExperience200ResponseOneOf1 CheckPasswordWithDefaultSignInExperience200ResponseOneOf1

// NewCheckPasswordWithDefaultSignInExperience200ResponseOneOf1 instantiates a new CheckPasswordWithDefaultSignInExperience200ResponseOneOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckPasswordWithDefaultSignInExperience200ResponseOneOf1(result bool, issues []CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1 {
	this := CheckPasswordWithDefaultSignInExperience200ResponseOneOf1{}
	this.Result = result
	this.Issues = issues
	return &this
}

// NewCheckPasswordWithDefaultSignInExperience200ResponseOneOf1WithDefaults instantiates a new CheckPasswordWithDefaultSignInExperience200ResponseOneOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckPasswordWithDefaultSignInExperience200ResponseOneOf1WithDefaults() *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1 {
	this := CheckPasswordWithDefaultSignInExperience200ResponseOneOf1{}
	return &this
}

// GetResult returns the Result field value
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) GetResult() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) GetResultOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) SetResult(v bool) {
	o.Result = v
}

// GetIssues returns the Issues field value
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) GetIssues() []CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner {
	if o == nil {
		var ret []CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner
		return ret
	}

	return o.Issues
}

// GetIssuesOk returns a tuple with the Issues field value
// and a boolean to check if the value has been set.
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) GetIssuesOk() ([]CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Issues, true
}

// SetIssues sets field value
func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) SetIssues(v []CheckPasswordWithDefaultSignInExperience200ResponseOneOf1IssuesInner) {
	o.Issues = v
}

func (o CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	toSerialize["issues"] = o.Issues
	return toSerialize, nil
}

func (o *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"result",
		"issues",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCheckPasswordWithDefaultSignInExperience200ResponseOneOf1 := _CheckPasswordWithDefaultSignInExperience200ResponseOneOf1{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCheckPasswordWithDefaultSignInExperience200ResponseOneOf1)

	if err != nil {
		return err
	}

	*o = CheckPasswordWithDefaultSignInExperience200ResponseOneOf1(varCheckPasswordWithDefaultSignInExperience200ResponseOneOf1)

	return err
}

type NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1 struct {
	value *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1
	isSet bool
}

func (v NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1) Get() *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1 {
	return v.value
}

func (v *NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1) Set(val *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1(val *CheckPasswordWithDefaultSignInExperience200ResponseOneOf1) *NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1 {
	return &NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1{value: val, isSet: true}
}

func (v NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckPasswordWithDefaultSignInExperience200ResponseOneOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


