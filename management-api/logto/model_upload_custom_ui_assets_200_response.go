/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UploadCustomUiAssets200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UploadCustomUiAssets200Response{}

// UploadCustomUiAssets200Response struct for UploadCustomUiAssets200Response
type UploadCustomUiAssets200Response struct {
	CustomUiAssetId string `json:"customUiAssetId"`
}

type _UploadCustomUiAssets200Response UploadCustomUiAssets200Response

// NewUploadCustomUiAssets200Response instantiates a new UploadCustomUiAssets200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUploadCustomUiAssets200Response(customUiAssetId string) *UploadCustomUiAssets200Response {
	this := UploadCustomUiAssets200Response{}
	this.CustomUiAssetId = customUiAssetId
	return &this
}

// NewUploadCustomUiAssets200ResponseWithDefaults instantiates a new UploadCustomUiAssets200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUploadCustomUiAssets200ResponseWithDefaults() *UploadCustomUiAssets200Response {
	this := UploadCustomUiAssets200Response{}
	return &this
}

// GetCustomUiAssetId returns the CustomUiAssetId field value
func (o *UploadCustomUiAssets200Response) GetCustomUiAssetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CustomUiAssetId
}

// GetCustomUiAssetIdOk returns a tuple with the CustomUiAssetId field value
// and a boolean to check if the value has been set.
func (o *UploadCustomUiAssets200Response) GetCustomUiAssetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CustomUiAssetId, true
}

// SetCustomUiAssetId sets field value
func (o *UploadCustomUiAssets200Response) SetCustomUiAssetId(v string) {
	o.CustomUiAssetId = v
}

func (o UploadCustomUiAssets200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UploadCustomUiAssets200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["customUiAssetId"] = o.CustomUiAssetId
	return toSerialize, nil
}

func (o *UploadCustomUiAssets200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"customUiAssetId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUploadCustomUiAssets200Response := _UploadCustomUiAssets200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUploadCustomUiAssets200Response)

	if err != nil {
		return err
	}

	*o = UploadCustomUiAssets200Response(varUploadCustomUiAssets200Response)

	return err
}

type NullableUploadCustomUiAssets200Response struct {
	value *UploadCustomUiAssets200Response
	isSet bool
}

func (v NullableUploadCustomUiAssets200Response) Get() *UploadCustomUiAssets200Response {
	return v.value
}

func (v *NullableUploadCustomUiAssets200Response) Set(val *UploadCustomUiAssets200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUploadCustomUiAssets200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUploadCustomUiAssets200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUploadCustomUiAssets200Response(val *UploadCustomUiAssets200Response) *NullableUploadCustomUiAssets200Response {
	return &NullableUploadCustomUiAssets200Response{value: val, isSet: true}
}

func (v NullableUploadCustomUiAssets200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUploadCustomUiAssets200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


