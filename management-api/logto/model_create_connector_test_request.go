/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateConnectorTestRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConnectorTestRequest{}

// CreateConnectorTestRequest struct for CreateConnectorTestRequest
type CreateConnectorTestRequest struct {
	// Phone number to send test message to. If this is set, email will be ignored.
	Phone *string `json:"phone,omitempty" validate:"regexp=^\\\\d+$"`
	// Email address to send test message to. If phone is set, this will be ignored.
	Email *string `json:"email,omitempty" validate:"regexp=^\\\\S+@\\\\S+\\\\.\\\\S+$"`
	// Connector configuration object for testing.
	Config map[string]interface{} `json:"config"`
}

type _CreateConnectorTestRequest CreateConnectorTestRequest

// NewCreateConnectorTestRequest instantiates a new CreateConnectorTestRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnectorTestRequest(config map[string]interface{}) *CreateConnectorTestRequest {
	this := CreateConnectorTestRequest{}
	this.Config = config
	return &this
}

// NewCreateConnectorTestRequestWithDefaults instantiates a new CreateConnectorTestRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnectorTestRequestWithDefaults() *CreateConnectorTestRequest {
	this := CreateConnectorTestRequest{}
	return &this
}

// GetPhone returns the Phone field value if set, zero value otherwise.
func (o *CreateConnectorTestRequest) GetPhone() string {
	if o == nil || IsNil(o.Phone) {
		var ret string
		return ret
	}
	return *o.Phone
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectorTestRequest) GetPhoneOk() (*string, bool) {
	if o == nil || IsNil(o.Phone) {
		return nil, false
	}
	return o.Phone, true
}

// HasPhone returns a boolean if a field has been set.
func (o *CreateConnectorTestRequest) HasPhone() bool {
	if o != nil && !IsNil(o.Phone) {
		return true
	}

	return false
}

// SetPhone gets a reference to the given string and assigns it to the Phone field.
func (o *CreateConnectorTestRequest) SetPhone(v string) {
	o.Phone = &v
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *CreateConnectorTestRequest) GetEmail() string {
	if o == nil || IsNil(o.Email) {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateConnectorTestRequest) GetEmailOk() (*string, bool) {
	if o == nil || IsNil(o.Email) {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *CreateConnectorTestRequest) HasEmail() bool {
	if o != nil && !IsNil(o.Email) {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *CreateConnectorTestRequest) SetEmail(v string) {
	o.Email = &v
}

// GetConfig returns the Config field value
func (o *CreateConnectorTestRequest) GetConfig() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorTestRequest) GetConfigOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Config, true
}

// SetConfig sets field value
func (o *CreateConnectorTestRequest) SetConfig(v map[string]interface{}) {
	o.Config = v
}

func (o CreateConnectorTestRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConnectorTestRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Phone) {
		toSerialize["phone"] = o.Phone
	}
	if !IsNil(o.Email) {
		toSerialize["email"] = o.Email
	}
	toSerialize["config"] = o.Config
	return toSerialize, nil
}

func (o *CreateConnectorTestRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"config",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateConnectorTestRequest := _CreateConnectorTestRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateConnectorTestRequest)

	if err != nil {
		return err
	}

	*o = CreateConnectorTestRequest(varCreateConnectorTestRequest)

	return err
}

type NullableCreateConnectorTestRequest struct {
	value *CreateConnectorTestRequest
	isSet bool
}

func (v NullableCreateConnectorTestRequest) Get() *CreateConnectorTestRequest {
	return v.value
}

func (v *NullableCreateConnectorTestRequest) Set(val *CreateConnectorTestRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnectorTestRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnectorTestRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnectorTestRequest(val *CreateConnectorTestRequest) *NullableCreateConnectorTestRequest {
	return &NullableCreateConnectorTestRequest{value: val, isSet: true}
}

func (v NullableCreateConnectorTestRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnectorTestRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


