/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
)

// checks if the GetAdminConsoleConfig200ResponseCheckedChargeNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetAdminConsoleConfig200ResponseCheckedChargeNotification{}

// GetAdminConsoleConfig200ResponseCheckedChargeNotification struct for GetAdminConsoleConfig200ResponseCheckedChargeNotification
type GetAdminConsoleConfig200ResponseCheckedChargeNotification struct {
	Token *bool `json:"token,omitempty"`
	ApiResource *bool `json:"apiResource,omitempty"`
	MachineToMachineApp *bool `json:"machineToMachineApp,omitempty"`
	TenantMember *bool `json:"tenantMember,omitempty"`
}

// NewGetAdminConsoleConfig200ResponseCheckedChargeNotification instantiates a new GetAdminConsoleConfig200ResponseCheckedChargeNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAdminConsoleConfig200ResponseCheckedChargeNotification() *GetAdminConsoleConfig200ResponseCheckedChargeNotification {
	this := GetAdminConsoleConfig200ResponseCheckedChargeNotification{}
	return &this
}

// NewGetAdminConsoleConfig200ResponseCheckedChargeNotificationWithDefaults instantiates a new GetAdminConsoleConfig200ResponseCheckedChargeNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAdminConsoleConfig200ResponseCheckedChargeNotificationWithDefaults() *GetAdminConsoleConfig200ResponseCheckedChargeNotification {
	this := GetAdminConsoleConfig200ResponseCheckedChargeNotification{}
	return &this
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) GetToken() bool {
	if o == nil || IsNil(o.Token) {
		var ret bool
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) GetTokenOk() (*bool, bool) {
	if o == nil || IsNil(o.Token) {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) HasToken() bool {
	if o != nil && !IsNil(o.Token) {
		return true
	}

	return false
}

// SetToken gets a reference to the given bool and assigns it to the Token field.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) SetToken(v bool) {
	o.Token = &v
}

// GetApiResource returns the ApiResource field value if set, zero value otherwise.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) GetApiResource() bool {
	if o == nil || IsNil(o.ApiResource) {
		var ret bool
		return ret
	}
	return *o.ApiResource
}

// GetApiResourceOk returns a tuple with the ApiResource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) GetApiResourceOk() (*bool, bool) {
	if o == nil || IsNil(o.ApiResource) {
		return nil, false
	}
	return o.ApiResource, true
}

// HasApiResource returns a boolean if a field has been set.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) HasApiResource() bool {
	if o != nil && !IsNil(o.ApiResource) {
		return true
	}

	return false
}

// SetApiResource gets a reference to the given bool and assigns it to the ApiResource field.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) SetApiResource(v bool) {
	o.ApiResource = &v
}

// GetMachineToMachineApp returns the MachineToMachineApp field value if set, zero value otherwise.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) GetMachineToMachineApp() bool {
	if o == nil || IsNil(o.MachineToMachineApp) {
		var ret bool
		return ret
	}
	return *o.MachineToMachineApp
}

// GetMachineToMachineAppOk returns a tuple with the MachineToMachineApp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) GetMachineToMachineAppOk() (*bool, bool) {
	if o == nil || IsNil(o.MachineToMachineApp) {
		return nil, false
	}
	return o.MachineToMachineApp, true
}

// HasMachineToMachineApp returns a boolean if a field has been set.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) HasMachineToMachineApp() bool {
	if o != nil && !IsNil(o.MachineToMachineApp) {
		return true
	}

	return false
}

// SetMachineToMachineApp gets a reference to the given bool and assigns it to the MachineToMachineApp field.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) SetMachineToMachineApp(v bool) {
	o.MachineToMachineApp = &v
}

// GetTenantMember returns the TenantMember field value if set, zero value otherwise.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) GetTenantMember() bool {
	if o == nil || IsNil(o.TenantMember) {
		var ret bool
		return ret
	}
	return *o.TenantMember
}

// GetTenantMemberOk returns a tuple with the TenantMember field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) GetTenantMemberOk() (*bool, bool) {
	if o == nil || IsNil(o.TenantMember) {
		return nil, false
	}
	return o.TenantMember, true
}

// HasTenantMember returns a boolean if a field has been set.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) HasTenantMember() bool {
	if o != nil && !IsNil(o.TenantMember) {
		return true
	}

	return false
}

// SetTenantMember gets a reference to the given bool and assigns it to the TenantMember field.
func (o *GetAdminConsoleConfig200ResponseCheckedChargeNotification) SetTenantMember(v bool) {
	o.TenantMember = &v
}

func (o GetAdminConsoleConfig200ResponseCheckedChargeNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetAdminConsoleConfig200ResponseCheckedChargeNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Token) {
		toSerialize["token"] = o.Token
	}
	if !IsNil(o.ApiResource) {
		toSerialize["apiResource"] = o.ApiResource
	}
	if !IsNil(o.MachineToMachineApp) {
		toSerialize["machineToMachineApp"] = o.MachineToMachineApp
	}
	if !IsNil(o.TenantMember) {
		toSerialize["tenantMember"] = o.TenantMember
	}
	return toSerialize, nil
}

type NullableGetAdminConsoleConfig200ResponseCheckedChargeNotification struct {
	value *GetAdminConsoleConfig200ResponseCheckedChargeNotification
	isSet bool
}

func (v NullableGetAdminConsoleConfig200ResponseCheckedChargeNotification) Get() *GetAdminConsoleConfig200ResponseCheckedChargeNotification {
	return v.value
}

func (v *NullableGetAdminConsoleConfig200ResponseCheckedChargeNotification) Set(val *GetAdminConsoleConfig200ResponseCheckedChargeNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAdminConsoleConfig200ResponseCheckedChargeNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAdminConsoleConfig200ResponseCheckedChargeNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAdminConsoleConfig200ResponseCheckedChargeNotification(val *GetAdminConsoleConfig200ResponseCheckedChargeNotification) *NullableGetAdminConsoleConfig200ResponseCheckedChargeNotification {
	return &NullableGetAdminConsoleConfig200ResponseCheckedChargeNotification{value: val, isSet: true}
}

func (v NullableGetAdminConsoleConfig200ResponseCheckedChargeNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAdminConsoleConfig200ResponseCheckedChargeNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


