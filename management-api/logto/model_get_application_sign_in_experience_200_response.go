/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetApplicationSignInExperience200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetApplicationSignInExperience200Response{}

// GetApplicationSignInExperience200Response struct for GetApplicationSignInExperience200Response
type GetApplicationSignInExperience200Response struct {
	TenantId string `json:"tenantId"`
	ApplicationId string `json:"applicationId"`
	Color GetApplicationSignInExperience200ResponseColor `json:"color"`
	Branding ListApplicationOrganizations200ResponseInnerBranding `json:"branding"`
	TermsOfUseUrl NullableString `json:"termsOfUseUrl"`
	PrivacyPolicyUrl NullableString `json:"privacyPolicyUrl"`
	DisplayName NullableString `json:"displayName"`
}

type _GetApplicationSignInExperience200Response GetApplicationSignInExperience200Response

// NewGetApplicationSignInExperience200Response instantiates a new GetApplicationSignInExperience200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetApplicationSignInExperience200Response(tenantId string, applicationId string, color GetApplicationSignInExperience200ResponseColor, branding ListApplicationOrganizations200ResponseInnerBranding, termsOfUseUrl NullableString, privacyPolicyUrl NullableString, displayName NullableString) *GetApplicationSignInExperience200Response {
	this := GetApplicationSignInExperience200Response{}
	this.TenantId = tenantId
	this.ApplicationId = applicationId
	this.Color = color
	this.Branding = branding
	this.TermsOfUseUrl = termsOfUseUrl
	this.PrivacyPolicyUrl = privacyPolicyUrl
	this.DisplayName = displayName
	return &this
}

// NewGetApplicationSignInExperience200ResponseWithDefaults instantiates a new GetApplicationSignInExperience200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetApplicationSignInExperience200ResponseWithDefaults() *GetApplicationSignInExperience200Response {
	this := GetApplicationSignInExperience200Response{}
	return &this
}

// GetTenantId returns the TenantId field value
func (o *GetApplicationSignInExperience200Response) GetTenantId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TenantId
}

// GetTenantIdOk returns a tuple with the TenantId field value
// and a boolean to check if the value has been set.
func (o *GetApplicationSignInExperience200Response) GetTenantIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TenantId, true
}

// SetTenantId sets field value
func (o *GetApplicationSignInExperience200Response) SetTenantId(v string) {
	o.TenantId = v
}

// GetApplicationId returns the ApplicationId field value
func (o *GetApplicationSignInExperience200Response) GetApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *GetApplicationSignInExperience200Response) GetApplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *GetApplicationSignInExperience200Response) SetApplicationId(v string) {
	o.ApplicationId = v
}

// GetColor returns the Color field value
func (o *GetApplicationSignInExperience200Response) GetColor() GetApplicationSignInExperience200ResponseColor {
	if o == nil {
		var ret GetApplicationSignInExperience200ResponseColor
		return ret
	}

	return o.Color
}

// GetColorOk returns a tuple with the Color field value
// and a boolean to check if the value has been set.
func (o *GetApplicationSignInExperience200Response) GetColorOk() (*GetApplicationSignInExperience200ResponseColor, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Color, true
}

// SetColor sets field value
func (o *GetApplicationSignInExperience200Response) SetColor(v GetApplicationSignInExperience200ResponseColor) {
	o.Color = v
}

// GetBranding returns the Branding field value
func (o *GetApplicationSignInExperience200Response) GetBranding() ListApplicationOrganizations200ResponseInnerBranding {
	if o == nil {
		var ret ListApplicationOrganizations200ResponseInnerBranding
		return ret
	}

	return o.Branding
}

// GetBrandingOk returns a tuple with the Branding field value
// and a boolean to check if the value has been set.
func (o *GetApplicationSignInExperience200Response) GetBrandingOk() (*ListApplicationOrganizations200ResponseInnerBranding, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Branding, true
}

// SetBranding sets field value
func (o *GetApplicationSignInExperience200Response) SetBranding(v ListApplicationOrganizations200ResponseInnerBranding) {
	o.Branding = v
}

// GetTermsOfUseUrl returns the TermsOfUseUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GetApplicationSignInExperience200Response) GetTermsOfUseUrl() string {
	if o == nil || o.TermsOfUseUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.TermsOfUseUrl.Get()
}

// GetTermsOfUseUrlOk returns a tuple with the TermsOfUseUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApplicationSignInExperience200Response) GetTermsOfUseUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TermsOfUseUrl.Get(), o.TermsOfUseUrl.IsSet()
}

// SetTermsOfUseUrl sets field value
func (o *GetApplicationSignInExperience200Response) SetTermsOfUseUrl(v string) {
	o.TermsOfUseUrl.Set(&v)
}

// GetPrivacyPolicyUrl returns the PrivacyPolicyUrl field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GetApplicationSignInExperience200Response) GetPrivacyPolicyUrl() string {
	if o == nil || o.PrivacyPolicyUrl.Get() == nil {
		var ret string
		return ret
	}

	return *o.PrivacyPolicyUrl.Get()
}

// GetPrivacyPolicyUrlOk returns a tuple with the PrivacyPolicyUrl field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApplicationSignInExperience200Response) GetPrivacyPolicyUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PrivacyPolicyUrl.Get(), o.PrivacyPolicyUrl.IsSet()
}

// SetPrivacyPolicyUrl sets field value
func (o *GetApplicationSignInExperience200Response) SetPrivacyPolicyUrl(v string) {
	o.PrivacyPolicyUrl.Set(&v)
}

// GetDisplayName returns the DisplayName field value
// If the value is explicit nil, the zero value for string will be returned
func (o *GetApplicationSignInExperience200Response) GetDisplayName() string {
	if o == nil || o.DisplayName.Get() == nil {
		var ret string
		return ret
	}

	return *o.DisplayName.Get()
}

// GetDisplayNameOk returns a tuple with the DisplayName field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetApplicationSignInExperience200Response) GetDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DisplayName.Get(), o.DisplayName.IsSet()
}

// SetDisplayName sets field value
func (o *GetApplicationSignInExperience200Response) SetDisplayName(v string) {
	o.DisplayName.Set(&v)
}

func (o GetApplicationSignInExperience200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetApplicationSignInExperience200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tenantId"] = o.TenantId
	toSerialize["applicationId"] = o.ApplicationId
	toSerialize["color"] = o.Color
	toSerialize["branding"] = o.Branding
	toSerialize["termsOfUseUrl"] = o.TermsOfUseUrl.Get()
	toSerialize["privacyPolicyUrl"] = o.PrivacyPolicyUrl.Get()
	toSerialize["displayName"] = o.DisplayName.Get()
	return toSerialize, nil
}

func (o *GetApplicationSignInExperience200Response) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"tenantId",
		"applicationId",
		"color",
		"branding",
		"termsOfUseUrl",
		"privacyPolicyUrl",
		"displayName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetApplicationSignInExperience200Response := _GetApplicationSignInExperience200Response{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetApplicationSignInExperience200Response)

	if err != nil {
		return err
	}

	*o = GetApplicationSignInExperience200Response(varGetApplicationSignInExperience200Response)

	return err
}

type NullableGetApplicationSignInExperience200Response struct {
	value *GetApplicationSignInExperience200Response
	isSet bool
}

func (v NullableGetApplicationSignInExperience200Response) Get() *GetApplicationSignInExperience200Response {
	return v.value
}

func (v *NullableGetApplicationSignInExperience200Response) Set(val *GetApplicationSignInExperience200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetApplicationSignInExperience200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetApplicationSignInExperience200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetApplicationSignInExperience200Response(val *GetApplicationSignInExperience200Response) *NullableGetApplicationSignInExperience200Response {
	return &NullableGetApplicationSignInExperience200Response{value: val, isSet: true}
}

func (v NullableGetApplicationSignInExperience200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetApplicationSignInExperience200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


