/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateSignInExpRequestSignUp type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSignInExpRequestSignUp{}

// UpdateSignInExpRequestSignUp Sign-up method settings
type UpdateSignInExpRequestSignUp struct {
	// Specify allowed identifiers when signing-up.
	Identifiers []string `json:"identifiers"`
	// Whether the user is required to set a password when signing-up.
	Password bool `json:"password"`
	// Whether the user is required to verify their email/phone when signing-up.
	Verify bool `json:"verify"`
}

type _UpdateSignInExpRequestSignUp UpdateSignInExpRequestSignUp

// NewUpdateSignInExpRequestSignUp instantiates a new UpdateSignInExpRequestSignUp object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSignInExpRequestSignUp(identifiers []string, password bool, verify bool) *UpdateSignInExpRequestSignUp {
	this := UpdateSignInExpRequestSignUp{}
	this.Identifiers = identifiers
	this.Password = password
	this.Verify = verify
	return &this
}

// NewUpdateSignInExpRequestSignUpWithDefaults instantiates a new UpdateSignInExpRequestSignUp object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSignInExpRequestSignUpWithDefaults() *UpdateSignInExpRequestSignUp {
	this := UpdateSignInExpRequestSignUp{}
	return &this
}

// GetIdentifiers returns the Identifiers field value
func (o *UpdateSignInExpRequestSignUp) GetIdentifiers() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Identifiers
}

// GetIdentifiersOk returns a tuple with the Identifiers field value
// and a boolean to check if the value has been set.
func (o *UpdateSignInExpRequestSignUp) GetIdentifiersOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Identifiers, true
}

// SetIdentifiers sets field value
func (o *UpdateSignInExpRequestSignUp) SetIdentifiers(v []string) {
	o.Identifiers = v
}

// GetPassword returns the Password field value
func (o *UpdateSignInExpRequestSignUp) GetPassword() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *UpdateSignInExpRequestSignUp) GetPasswordOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *UpdateSignInExpRequestSignUp) SetPassword(v bool) {
	o.Password = v
}

// GetVerify returns the Verify field value
func (o *UpdateSignInExpRequestSignUp) GetVerify() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Verify
}

// GetVerifyOk returns a tuple with the Verify field value
// and a boolean to check if the value has been set.
func (o *UpdateSignInExpRequestSignUp) GetVerifyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Verify, true
}

// SetVerify sets field value
func (o *UpdateSignInExpRequestSignUp) SetVerify(v bool) {
	o.Verify = v
}

func (o UpdateSignInExpRequestSignUp) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSignInExpRequestSignUp) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identifiers"] = o.Identifiers
	toSerialize["password"] = o.Password
	toSerialize["verify"] = o.Verify
	return toSerialize, nil
}

func (o *UpdateSignInExpRequestSignUp) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifiers",
		"password",
		"verify",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateSignInExpRequestSignUp := _UpdateSignInExpRequestSignUp{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateSignInExpRequestSignUp)

	if err != nil {
		return err
	}

	*o = UpdateSignInExpRequestSignUp(varUpdateSignInExpRequestSignUp)

	return err
}

type NullableUpdateSignInExpRequestSignUp struct {
	value *UpdateSignInExpRequestSignUp
	isSet bool
}

func (v NullableUpdateSignInExpRequestSignUp) Get() *UpdateSignInExpRequestSignUp {
	return v.value
}

func (v *NullableUpdateSignInExpRequestSignUp) Set(val *UpdateSignInExpRequestSignUp) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSignInExpRequestSignUp) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSignInExpRequestSignUp) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSignInExpRequestSignUp(val *UpdateSignInExpRequestSignUp) *NullableUpdateSignInExpRequestSignUp {
	return &NullableUpdateSignInExpRequestSignUp{value: val, isSet: true}
}

func (v NullableUpdateSignInExpRequestSignUp) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSignInExpRequestSignUp) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


