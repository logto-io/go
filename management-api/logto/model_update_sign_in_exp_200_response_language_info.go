/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdateSignInExp200ResponseLanguageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateSignInExp200ResponseLanguageInfo{}

// UpdateSignInExp200ResponseLanguageInfo struct for UpdateSignInExp200ResponseLanguageInfo
type UpdateSignInExp200ResponseLanguageInfo struct {
	AutoDetect bool `json:"autoDetect"`
	FallbackLanguage string `json:"fallbackLanguage"`
}

type _UpdateSignInExp200ResponseLanguageInfo UpdateSignInExp200ResponseLanguageInfo

// NewUpdateSignInExp200ResponseLanguageInfo instantiates a new UpdateSignInExp200ResponseLanguageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateSignInExp200ResponseLanguageInfo(autoDetect bool, fallbackLanguage string) *UpdateSignInExp200ResponseLanguageInfo {
	this := UpdateSignInExp200ResponseLanguageInfo{}
	this.AutoDetect = autoDetect
	this.FallbackLanguage = fallbackLanguage
	return &this
}

// NewUpdateSignInExp200ResponseLanguageInfoWithDefaults instantiates a new UpdateSignInExp200ResponseLanguageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateSignInExp200ResponseLanguageInfoWithDefaults() *UpdateSignInExp200ResponseLanguageInfo {
	this := UpdateSignInExp200ResponseLanguageInfo{}
	return &this
}

// GetAutoDetect returns the AutoDetect field value
func (o *UpdateSignInExp200ResponseLanguageInfo) GetAutoDetect() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AutoDetect
}

// GetAutoDetectOk returns a tuple with the AutoDetect field value
// and a boolean to check if the value has been set.
func (o *UpdateSignInExp200ResponseLanguageInfo) GetAutoDetectOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AutoDetect, true
}

// SetAutoDetect sets field value
func (o *UpdateSignInExp200ResponseLanguageInfo) SetAutoDetect(v bool) {
	o.AutoDetect = v
}

// GetFallbackLanguage returns the FallbackLanguage field value
func (o *UpdateSignInExp200ResponseLanguageInfo) GetFallbackLanguage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FallbackLanguage
}

// GetFallbackLanguageOk returns a tuple with the FallbackLanguage field value
// and a boolean to check if the value has been set.
func (o *UpdateSignInExp200ResponseLanguageInfo) GetFallbackLanguageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FallbackLanguage, true
}

// SetFallbackLanguage sets field value
func (o *UpdateSignInExp200ResponseLanguageInfo) SetFallbackLanguage(v string) {
	o.FallbackLanguage = v
}

func (o UpdateSignInExp200ResponseLanguageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateSignInExp200ResponseLanguageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["autoDetect"] = o.AutoDetect
	toSerialize["fallbackLanguage"] = o.FallbackLanguage
	return toSerialize, nil
}

func (o *UpdateSignInExp200ResponseLanguageInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"autoDetect",
		"fallbackLanguage",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateSignInExp200ResponseLanguageInfo := _UpdateSignInExp200ResponseLanguageInfo{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateSignInExp200ResponseLanguageInfo)

	if err != nil {
		return err
	}

	*o = UpdateSignInExp200ResponseLanguageInfo(varUpdateSignInExp200ResponseLanguageInfo)

	return err
}

type NullableUpdateSignInExp200ResponseLanguageInfo struct {
	value *UpdateSignInExp200ResponseLanguageInfo
	isSet bool
}

func (v NullableUpdateSignInExp200ResponseLanguageInfo) Get() *UpdateSignInExp200ResponseLanguageInfo {
	return v.value
}

func (v *NullableUpdateSignInExp200ResponseLanguageInfo) Set(val *UpdateSignInExp200ResponseLanguageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateSignInExp200ResponseLanguageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateSignInExp200ResponseLanguageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateSignInExp200ResponseLanguageInfo(val *UpdateSignInExp200ResponseLanguageInfo) *NullableUpdateSignInExp200ResponseLanguageInfo {
	return &NullableUpdateSignInExp200ResponseLanguageInfo{value: val, isSet: true}
}

func (v NullableUpdateSignInExp200ResponseLanguageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateSignInExp200ResponseLanguageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


