/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateApplicationRequestProtectedAppMetadata type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateApplicationRequestProtectedAppMetadata{}

// CreateApplicationRequestProtectedAppMetadata The data for protected app, this feature is not available for open source version.
type CreateApplicationRequestProtectedAppMetadata struct {
	// The subdomain prefix, e.g., my-site.
	SubDomain string `json:"subDomain"`
	// The origin of target website, e.g., https://example.com.
	Origin string `json:"origin"`
}

type _CreateApplicationRequestProtectedAppMetadata CreateApplicationRequestProtectedAppMetadata

// NewCreateApplicationRequestProtectedAppMetadata instantiates a new CreateApplicationRequestProtectedAppMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateApplicationRequestProtectedAppMetadata(subDomain string, origin string) *CreateApplicationRequestProtectedAppMetadata {
	this := CreateApplicationRequestProtectedAppMetadata{}
	this.SubDomain = subDomain
	this.Origin = origin
	return &this
}

// NewCreateApplicationRequestProtectedAppMetadataWithDefaults instantiates a new CreateApplicationRequestProtectedAppMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateApplicationRequestProtectedAppMetadataWithDefaults() *CreateApplicationRequestProtectedAppMetadata {
	this := CreateApplicationRequestProtectedAppMetadata{}
	return &this
}

// GetSubDomain returns the SubDomain field value
func (o *CreateApplicationRequestProtectedAppMetadata) GetSubDomain() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubDomain
}

// GetSubDomainOk returns a tuple with the SubDomain field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestProtectedAppMetadata) GetSubDomainOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubDomain, true
}

// SetSubDomain sets field value
func (o *CreateApplicationRequestProtectedAppMetadata) SetSubDomain(v string) {
	o.SubDomain = v
}

// GetOrigin returns the Origin field value
func (o *CreateApplicationRequestProtectedAppMetadata) GetOrigin() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Origin
}

// GetOriginOk returns a tuple with the Origin field value
// and a boolean to check if the value has been set.
func (o *CreateApplicationRequestProtectedAppMetadata) GetOriginOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Origin, true
}

// SetOrigin sets field value
func (o *CreateApplicationRequestProtectedAppMetadata) SetOrigin(v string) {
	o.Origin = v
}

func (o CreateApplicationRequestProtectedAppMetadata) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateApplicationRequestProtectedAppMetadata) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subDomain"] = o.SubDomain
	toSerialize["origin"] = o.Origin
	return toSerialize, nil
}

func (o *CreateApplicationRequestProtectedAppMetadata) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"subDomain",
		"origin",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateApplicationRequestProtectedAppMetadata := _CreateApplicationRequestProtectedAppMetadata{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateApplicationRequestProtectedAppMetadata)

	if err != nil {
		return err
	}

	*o = CreateApplicationRequestProtectedAppMetadata(varCreateApplicationRequestProtectedAppMetadata)

	return err
}

type NullableCreateApplicationRequestProtectedAppMetadata struct {
	value *CreateApplicationRequestProtectedAppMetadata
	isSet bool
}

func (v NullableCreateApplicationRequestProtectedAppMetadata) Get() *CreateApplicationRequestProtectedAppMetadata {
	return v.value
}

func (v *NullableCreateApplicationRequestProtectedAppMetadata) Set(val *CreateApplicationRequestProtectedAppMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateApplicationRequestProtectedAppMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateApplicationRequestProtectedAppMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateApplicationRequestProtectedAppMetadata(val *CreateApplicationRequestProtectedAppMetadata) *NullableCreateApplicationRequestProtectedAppMetadata {
	return &NullableCreateApplicationRequestProtectedAppMetadata{value: val, isSet: true}
}

func (v NullableCreateApplicationRequestProtectedAppMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateApplicationRequestProtectedAppMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


