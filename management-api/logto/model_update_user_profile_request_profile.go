/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
)

// checks if the UpdateUserProfileRequestProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateUserProfileRequestProfile{}

// UpdateUserProfileRequestProfile Partial profile object to update for the given user ID.
type UpdateUserProfileRequestProfile struct {
	FamilyName *string `json:"familyName,omitempty"`
	GivenName *string `json:"givenName,omitempty"`
	MiddleName *string `json:"middleName,omitempty"`
	Nickname *string `json:"nickname,omitempty"`
	PreferredUsername *string `json:"preferredUsername,omitempty"`
	Profile *string `json:"profile,omitempty"`
	Website *string `json:"website,omitempty"`
	Gender *string `json:"gender,omitempty"`
	Birthdate *string `json:"birthdate,omitempty"`
	Zoneinfo *string `json:"zoneinfo,omitempty"`
	Locale *string `json:"locale,omitempty"`
	Address *GetJwtCustomizer200ResponseOneOfContextSampleUserProfileAddress `json:"address,omitempty"`
}

// NewUpdateUserProfileRequestProfile instantiates a new UpdateUserProfileRequestProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateUserProfileRequestProfile() *UpdateUserProfileRequestProfile {
	this := UpdateUserProfileRequestProfile{}
	return &this
}

// NewUpdateUserProfileRequestProfileWithDefaults instantiates a new UpdateUserProfileRequestProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateUserProfileRequestProfileWithDefaults() *UpdateUserProfileRequestProfile {
	this := UpdateUserProfileRequestProfile{}
	return &this
}

// GetFamilyName returns the FamilyName field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetFamilyName() string {
	if o == nil || IsNil(o.FamilyName) {
		var ret string
		return ret
	}
	return *o.FamilyName
}

// GetFamilyNameOk returns a tuple with the FamilyName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetFamilyNameOk() (*string, bool) {
	if o == nil || IsNil(o.FamilyName) {
		return nil, false
	}
	return o.FamilyName, true
}

// HasFamilyName returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasFamilyName() bool {
	if o != nil && !IsNil(o.FamilyName) {
		return true
	}

	return false
}

// SetFamilyName gets a reference to the given string and assigns it to the FamilyName field.
func (o *UpdateUserProfileRequestProfile) SetFamilyName(v string) {
	o.FamilyName = &v
}

// GetGivenName returns the GivenName field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetGivenName() string {
	if o == nil || IsNil(o.GivenName) {
		var ret string
		return ret
	}
	return *o.GivenName
}

// GetGivenNameOk returns a tuple with the GivenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetGivenNameOk() (*string, bool) {
	if o == nil || IsNil(o.GivenName) {
		return nil, false
	}
	return o.GivenName, true
}

// HasGivenName returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasGivenName() bool {
	if o != nil && !IsNil(o.GivenName) {
		return true
	}

	return false
}

// SetGivenName gets a reference to the given string and assigns it to the GivenName field.
func (o *UpdateUserProfileRequestProfile) SetGivenName(v string) {
	o.GivenName = &v
}

// GetMiddleName returns the MiddleName field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetMiddleName() string {
	if o == nil || IsNil(o.MiddleName) {
		var ret string
		return ret
	}
	return *o.MiddleName
}

// GetMiddleNameOk returns a tuple with the MiddleName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetMiddleNameOk() (*string, bool) {
	if o == nil || IsNil(o.MiddleName) {
		return nil, false
	}
	return o.MiddleName, true
}

// HasMiddleName returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasMiddleName() bool {
	if o != nil && !IsNil(o.MiddleName) {
		return true
	}

	return false
}

// SetMiddleName gets a reference to the given string and assigns it to the MiddleName field.
func (o *UpdateUserProfileRequestProfile) SetMiddleName(v string) {
	o.MiddleName = &v
}

// GetNickname returns the Nickname field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetNickname() string {
	if o == nil || IsNil(o.Nickname) {
		var ret string
		return ret
	}
	return *o.Nickname
}

// GetNicknameOk returns a tuple with the Nickname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetNicknameOk() (*string, bool) {
	if o == nil || IsNil(o.Nickname) {
		return nil, false
	}
	return o.Nickname, true
}

// HasNickname returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasNickname() bool {
	if o != nil && !IsNil(o.Nickname) {
		return true
	}

	return false
}

// SetNickname gets a reference to the given string and assigns it to the Nickname field.
func (o *UpdateUserProfileRequestProfile) SetNickname(v string) {
	o.Nickname = &v
}

// GetPreferredUsername returns the PreferredUsername field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetPreferredUsername() string {
	if o == nil || IsNil(o.PreferredUsername) {
		var ret string
		return ret
	}
	return *o.PreferredUsername
}

// GetPreferredUsernameOk returns a tuple with the PreferredUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetPreferredUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.PreferredUsername) {
		return nil, false
	}
	return o.PreferredUsername, true
}

// HasPreferredUsername returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasPreferredUsername() bool {
	if o != nil && !IsNil(o.PreferredUsername) {
		return true
	}

	return false
}

// SetPreferredUsername gets a reference to the given string and assigns it to the PreferredUsername field.
func (o *UpdateUserProfileRequestProfile) SetPreferredUsername(v string) {
	o.PreferredUsername = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *UpdateUserProfileRequestProfile) SetProfile(v string) {
	o.Profile = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetWebsite() string {
	if o == nil || IsNil(o.Website) {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetWebsiteOk() (*string, bool) {
	if o == nil || IsNil(o.Website) {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasWebsite() bool {
	if o != nil && !IsNil(o.Website) {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *UpdateUserProfileRequestProfile) SetWebsite(v string) {
	o.Website = &v
}

// GetGender returns the Gender field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetGender() string {
	if o == nil || IsNil(o.Gender) {
		var ret string
		return ret
	}
	return *o.Gender
}

// GetGenderOk returns a tuple with the Gender field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetGenderOk() (*string, bool) {
	if o == nil || IsNil(o.Gender) {
		return nil, false
	}
	return o.Gender, true
}

// HasGender returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasGender() bool {
	if o != nil && !IsNil(o.Gender) {
		return true
	}

	return false
}

// SetGender gets a reference to the given string and assigns it to the Gender field.
func (o *UpdateUserProfileRequestProfile) SetGender(v string) {
	o.Gender = &v
}

// GetBirthdate returns the Birthdate field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetBirthdate() string {
	if o == nil || IsNil(o.Birthdate) {
		var ret string
		return ret
	}
	return *o.Birthdate
}

// GetBirthdateOk returns a tuple with the Birthdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetBirthdateOk() (*string, bool) {
	if o == nil || IsNil(o.Birthdate) {
		return nil, false
	}
	return o.Birthdate, true
}

// HasBirthdate returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasBirthdate() bool {
	if o != nil && !IsNil(o.Birthdate) {
		return true
	}

	return false
}

// SetBirthdate gets a reference to the given string and assigns it to the Birthdate field.
func (o *UpdateUserProfileRequestProfile) SetBirthdate(v string) {
	o.Birthdate = &v
}

// GetZoneinfo returns the Zoneinfo field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetZoneinfo() string {
	if o == nil || IsNil(o.Zoneinfo) {
		var ret string
		return ret
	}
	return *o.Zoneinfo
}

// GetZoneinfoOk returns a tuple with the Zoneinfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetZoneinfoOk() (*string, bool) {
	if o == nil || IsNil(o.Zoneinfo) {
		return nil, false
	}
	return o.Zoneinfo, true
}

// HasZoneinfo returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasZoneinfo() bool {
	if o != nil && !IsNil(o.Zoneinfo) {
		return true
	}

	return false
}

// SetZoneinfo gets a reference to the given string and assigns it to the Zoneinfo field.
func (o *UpdateUserProfileRequestProfile) SetZoneinfo(v string) {
	o.Zoneinfo = &v
}

// GetLocale returns the Locale field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetLocale() string {
	if o == nil || IsNil(o.Locale) {
		var ret string
		return ret
	}
	return *o.Locale
}

// GetLocaleOk returns a tuple with the Locale field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetLocaleOk() (*string, bool) {
	if o == nil || IsNil(o.Locale) {
		return nil, false
	}
	return o.Locale, true
}

// HasLocale returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasLocale() bool {
	if o != nil && !IsNil(o.Locale) {
		return true
	}

	return false
}

// SetLocale gets a reference to the given string and assigns it to the Locale field.
func (o *UpdateUserProfileRequestProfile) SetLocale(v string) {
	o.Locale = &v
}

// GetAddress returns the Address field value if set, zero value otherwise.
func (o *UpdateUserProfileRequestProfile) GetAddress() GetJwtCustomizer200ResponseOneOfContextSampleUserProfileAddress {
	if o == nil || IsNil(o.Address) {
		var ret GetJwtCustomizer200ResponseOneOfContextSampleUserProfileAddress
		return ret
	}
	return *o.Address
}

// GetAddressOk returns a tuple with the Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateUserProfileRequestProfile) GetAddressOk() (*GetJwtCustomizer200ResponseOneOfContextSampleUserProfileAddress, bool) {
	if o == nil || IsNil(o.Address) {
		return nil, false
	}
	return o.Address, true
}

// HasAddress returns a boolean if a field has been set.
func (o *UpdateUserProfileRequestProfile) HasAddress() bool {
	if o != nil && !IsNil(o.Address) {
		return true
	}

	return false
}

// SetAddress gets a reference to the given GetJwtCustomizer200ResponseOneOfContextSampleUserProfileAddress and assigns it to the Address field.
func (o *UpdateUserProfileRequestProfile) SetAddress(v GetJwtCustomizer200ResponseOneOfContextSampleUserProfileAddress) {
	o.Address = &v
}

func (o UpdateUserProfileRequestProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateUserProfileRequestProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FamilyName) {
		toSerialize["familyName"] = o.FamilyName
	}
	if !IsNil(o.GivenName) {
		toSerialize["givenName"] = o.GivenName
	}
	if !IsNil(o.MiddleName) {
		toSerialize["middleName"] = o.MiddleName
	}
	if !IsNil(o.Nickname) {
		toSerialize["nickname"] = o.Nickname
	}
	if !IsNil(o.PreferredUsername) {
		toSerialize["preferredUsername"] = o.PreferredUsername
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	if !IsNil(o.Website) {
		toSerialize["website"] = o.Website
	}
	if !IsNil(o.Gender) {
		toSerialize["gender"] = o.Gender
	}
	if !IsNil(o.Birthdate) {
		toSerialize["birthdate"] = o.Birthdate
	}
	if !IsNil(o.Zoneinfo) {
		toSerialize["zoneinfo"] = o.Zoneinfo
	}
	if !IsNil(o.Locale) {
		toSerialize["locale"] = o.Locale
	}
	if !IsNil(o.Address) {
		toSerialize["address"] = o.Address
	}
	return toSerialize, nil
}

type NullableUpdateUserProfileRequestProfile struct {
	value *UpdateUserProfileRequestProfile
	isSet bool
}

func (v NullableUpdateUserProfileRequestProfile) Get() *UpdateUserProfileRequestProfile {
	return v.value
}

func (v *NullableUpdateUserProfileRequestProfile) Set(val *UpdateUserProfileRequestProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateUserProfileRequestProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateUserProfileRequestProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateUserProfileRequestProfile(val *UpdateUserProfileRequestProfile) *NullableUpdateUserProfileRequestProfile {
	return &NullableUpdateUserProfileRequestProfile{value: val, isSet: true}
}

func (v NullableUpdateUserProfileRequestProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateUserProfileRequestProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


