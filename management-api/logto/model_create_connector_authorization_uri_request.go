/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreateConnectorAuthorizationUriRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateConnectorAuthorizationUriRequest{}

// CreateConnectorAuthorizationUriRequest struct for CreateConnectorAuthorizationUriRequest
type CreateConnectorAuthorizationUriRequest struct {
	// A random string generated on the client side to prevent CSRF (Cross-Site Request Forgery) attacks.
	State string `json:"state"`
	// The URI to navigate back to after the user is authenticated by the connected social identity provider and has granted access to the connector.
	RedirectUri string `json:"redirectUri"`
}

type _CreateConnectorAuthorizationUriRequest CreateConnectorAuthorizationUriRequest

// NewCreateConnectorAuthorizationUriRequest instantiates a new CreateConnectorAuthorizationUriRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateConnectorAuthorizationUriRequest(state string, redirectUri string) *CreateConnectorAuthorizationUriRequest {
	this := CreateConnectorAuthorizationUriRequest{}
	this.State = state
	this.RedirectUri = redirectUri
	return &this
}

// NewCreateConnectorAuthorizationUriRequestWithDefaults instantiates a new CreateConnectorAuthorizationUriRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateConnectorAuthorizationUriRequestWithDefaults() *CreateConnectorAuthorizationUriRequest {
	this := CreateConnectorAuthorizationUriRequest{}
	return &this
}

// GetState returns the State field value
func (o *CreateConnectorAuthorizationUriRequest) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorAuthorizationUriRequest) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *CreateConnectorAuthorizationUriRequest) SetState(v string) {
	o.State = v
}

// GetRedirectUri returns the RedirectUri field value
func (o *CreateConnectorAuthorizationUriRequest) GetRedirectUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RedirectUri
}

// GetRedirectUriOk returns a tuple with the RedirectUri field value
// and a boolean to check if the value has been set.
func (o *CreateConnectorAuthorizationUriRequest) GetRedirectUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RedirectUri, true
}

// SetRedirectUri sets field value
func (o *CreateConnectorAuthorizationUriRequest) SetRedirectUri(v string) {
	o.RedirectUri = v
}

func (o CreateConnectorAuthorizationUriRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateConnectorAuthorizationUriRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["state"] = o.State
	toSerialize["redirectUri"] = o.RedirectUri
	return toSerialize, nil
}

func (o *CreateConnectorAuthorizationUriRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"state",
		"redirectUri",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateConnectorAuthorizationUriRequest := _CreateConnectorAuthorizationUriRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreateConnectorAuthorizationUriRequest)

	if err != nil {
		return err
	}

	*o = CreateConnectorAuthorizationUriRequest(varCreateConnectorAuthorizationUriRequest)

	return err
}

type NullableCreateConnectorAuthorizationUriRequest struct {
	value *CreateConnectorAuthorizationUriRequest
	isSet bool
}

func (v NullableCreateConnectorAuthorizationUriRequest) Get() *CreateConnectorAuthorizationUriRequest {
	return v.value
}

func (v *NullableCreateConnectorAuthorizationUriRequest) Set(val *CreateConnectorAuthorizationUriRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateConnectorAuthorizationUriRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateConnectorAuthorizationUriRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateConnectorAuthorizationUriRequest(val *CreateConnectorAuthorizationUriRequest) *NullableCreateConnectorAuthorizationUriRequest {
	return &NullableCreateConnectorAuthorizationUriRequest{value: val, isSet: true}
}

func (v NullableCreateConnectorAuthorizationUriRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateConnectorAuthorizationUriRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


