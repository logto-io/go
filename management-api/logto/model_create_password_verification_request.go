/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CreatePasswordVerificationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatePasswordVerificationRequest{}

// CreatePasswordVerificationRequest struct for CreatePasswordVerificationRequest
type CreatePasswordVerificationRequest struct {
	Identifier CreatePasswordVerificationRequestIdentifier `json:"identifier"`
	// The user password.
	Password string `json:"password"`
}

type _CreatePasswordVerificationRequest CreatePasswordVerificationRequest

// NewCreatePasswordVerificationRequest instantiates a new CreatePasswordVerificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatePasswordVerificationRequest(identifier CreatePasswordVerificationRequestIdentifier, password string) *CreatePasswordVerificationRequest {
	this := CreatePasswordVerificationRequest{}
	this.Identifier = identifier
	this.Password = password
	return &this
}

// NewCreatePasswordVerificationRequestWithDefaults instantiates a new CreatePasswordVerificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatePasswordVerificationRequestWithDefaults() *CreatePasswordVerificationRequest {
	this := CreatePasswordVerificationRequest{}
	return &this
}

// GetIdentifier returns the Identifier field value
func (o *CreatePasswordVerificationRequest) GetIdentifier() CreatePasswordVerificationRequestIdentifier {
	if o == nil {
		var ret CreatePasswordVerificationRequestIdentifier
		return ret
	}

	return o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value
// and a boolean to check if the value has been set.
func (o *CreatePasswordVerificationRequest) GetIdentifierOk() (*CreatePasswordVerificationRequestIdentifier, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Identifier, true
}

// SetIdentifier sets field value
func (o *CreatePasswordVerificationRequest) SetIdentifier(v CreatePasswordVerificationRequestIdentifier) {
	o.Identifier = v
}

// GetPassword returns the Password field value
func (o *CreatePasswordVerificationRequest) GetPassword() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Password
}

// GetPasswordOk returns a tuple with the Password field value
// and a boolean to check if the value has been set.
func (o *CreatePasswordVerificationRequest) GetPasswordOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Password, true
}

// SetPassword sets field value
func (o *CreatePasswordVerificationRequest) SetPassword(v string) {
	o.Password = v
}

func (o CreatePasswordVerificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatePasswordVerificationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["identifier"] = o.Identifier
	toSerialize["password"] = o.Password
	return toSerialize, nil
}

func (o *CreatePasswordVerificationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"identifier",
		"password",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreatePasswordVerificationRequest := _CreatePasswordVerificationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCreatePasswordVerificationRequest)

	if err != nil {
		return err
	}

	*o = CreatePasswordVerificationRequest(varCreatePasswordVerificationRequest)

	return err
}

type NullableCreatePasswordVerificationRequest struct {
	value *CreatePasswordVerificationRequest
	isSet bool
}

func (v NullableCreatePasswordVerificationRequest) Get() *CreatePasswordVerificationRequest {
	return v.value
}

func (v *NullableCreatePasswordVerificationRequest) Set(val *CreatePasswordVerificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatePasswordVerificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatePasswordVerificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatePasswordVerificationRequest(val *CreatePasswordVerificationRequest) *NullableCreatePasswordVerificationRequest {
	return &NullableCreatePasswordVerificationRequest{value: val, isSet: true}
}

func (v NullableCreatePasswordVerificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatePasswordVerificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


