/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetSignInExperienceConfig200ResponseGoogleOneTap type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSignInExperienceConfig200ResponseGoogleOneTap{}

// GetSignInExperienceConfig200ResponseGoogleOneTap struct for GetSignInExperienceConfig200ResponseGoogleOneTap
type GetSignInExperienceConfig200ResponseGoogleOneTap struct {
	IsEnabled *bool `json:"isEnabled,omitempty"`
	AutoSelect *bool `json:"autoSelect,omitempty"`
	CloseOnTapOutside *bool `json:"closeOnTapOutside,omitempty"`
	ItpSupport *bool `json:"itpSupport,omitempty"`
	ClientId string `json:"clientId"`
	ConnectorId string `json:"connectorId"`
}

type _GetSignInExperienceConfig200ResponseGoogleOneTap GetSignInExperienceConfig200ResponseGoogleOneTap

// NewGetSignInExperienceConfig200ResponseGoogleOneTap instantiates a new GetSignInExperienceConfig200ResponseGoogleOneTap object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSignInExperienceConfig200ResponseGoogleOneTap(clientId string, connectorId string) *GetSignInExperienceConfig200ResponseGoogleOneTap {
	this := GetSignInExperienceConfig200ResponseGoogleOneTap{}
	this.ClientId = clientId
	this.ConnectorId = connectorId
	return &this
}

// NewGetSignInExperienceConfig200ResponseGoogleOneTapWithDefaults instantiates a new GetSignInExperienceConfig200ResponseGoogleOneTap object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSignInExperienceConfig200ResponseGoogleOneTapWithDefaults() *GetSignInExperienceConfig200ResponseGoogleOneTap {
	this := GetSignInExperienceConfig200ResponseGoogleOneTap{}
	return &this
}

// GetIsEnabled returns the IsEnabled field value if set, zero value otherwise.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetIsEnabled() bool {
	if o == nil || IsNil(o.IsEnabled) {
		var ret bool
		return ret
	}
	return *o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetIsEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.IsEnabled) {
		return nil, false
	}
	return o.IsEnabled, true
}

// HasIsEnabled returns a boolean if a field has been set.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) HasIsEnabled() bool {
	if o != nil && !IsNil(o.IsEnabled) {
		return true
	}

	return false
}

// SetIsEnabled gets a reference to the given bool and assigns it to the IsEnabled field.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) SetIsEnabled(v bool) {
	o.IsEnabled = &v
}

// GetAutoSelect returns the AutoSelect field value if set, zero value otherwise.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetAutoSelect() bool {
	if o == nil || IsNil(o.AutoSelect) {
		var ret bool
		return ret
	}
	return *o.AutoSelect
}

// GetAutoSelectOk returns a tuple with the AutoSelect field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetAutoSelectOk() (*bool, bool) {
	if o == nil || IsNil(o.AutoSelect) {
		return nil, false
	}
	return o.AutoSelect, true
}

// HasAutoSelect returns a boolean if a field has been set.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) HasAutoSelect() bool {
	if o != nil && !IsNil(o.AutoSelect) {
		return true
	}

	return false
}

// SetAutoSelect gets a reference to the given bool and assigns it to the AutoSelect field.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) SetAutoSelect(v bool) {
	o.AutoSelect = &v
}

// GetCloseOnTapOutside returns the CloseOnTapOutside field value if set, zero value otherwise.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetCloseOnTapOutside() bool {
	if o == nil || IsNil(o.CloseOnTapOutside) {
		var ret bool
		return ret
	}
	return *o.CloseOnTapOutside
}

// GetCloseOnTapOutsideOk returns a tuple with the CloseOnTapOutside field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetCloseOnTapOutsideOk() (*bool, bool) {
	if o == nil || IsNil(o.CloseOnTapOutside) {
		return nil, false
	}
	return o.CloseOnTapOutside, true
}

// HasCloseOnTapOutside returns a boolean if a field has been set.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) HasCloseOnTapOutside() bool {
	if o != nil && !IsNil(o.CloseOnTapOutside) {
		return true
	}

	return false
}

// SetCloseOnTapOutside gets a reference to the given bool and assigns it to the CloseOnTapOutside field.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) SetCloseOnTapOutside(v bool) {
	o.CloseOnTapOutside = &v
}

// GetItpSupport returns the ItpSupport field value if set, zero value otherwise.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetItpSupport() bool {
	if o == nil || IsNil(o.ItpSupport) {
		var ret bool
		return ret
	}
	return *o.ItpSupport
}

// GetItpSupportOk returns a tuple with the ItpSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetItpSupportOk() (*bool, bool) {
	if o == nil || IsNil(o.ItpSupport) {
		return nil, false
	}
	return o.ItpSupport, true
}

// HasItpSupport returns a boolean if a field has been set.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) HasItpSupport() bool {
	if o != nil && !IsNil(o.ItpSupport) {
		return true
	}

	return false
}

// SetItpSupport gets a reference to the given bool and assigns it to the ItpSupport field.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) SetItpSupport(v bool) {
	o.ItpSupport = &v
}

// GetClientId returns the ClientId field value
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetClientId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ClientId
}

// GetClientIdOk returns a tuple with the ClientId field value
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetClientIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ClientId, true
}

// SetClientId sets field value
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) SetClientId(v string) {
	o.ClientId = v
}

// GetConnectorId returns the ConnectorId field value
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetConnectorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConnectorId
}

// GetConnectorIdOk returns a tuple with the ConnectorId field value
// and a boolean to check if the value has been set.
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) GetConnectorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConnectorId, true
}

// SetConnectorId sets field value
func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) SetConnectorId(v string) {
	o.ConnectorId = v
}

func (o GetSignInExperienceConfig200ResponseGoogleOneTap) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSignInExperienceConfig200ResponseGoogleOneTap) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IsEnabled) {
		toSerialize["isEnabled"] = o.IsEnabled
	}
	if !IsNil(o.AutoSelect) {
		toSerialize["autoSelect"] = o.AutoSelect
	}
	if !IsNil(o.CloseOnTapOutside) {
		toSerialize["closeOnTapOutside"] = o.CloseOnTapOutside
	}
	if !IsNil(o.ItpSupport) {
		toSerialize["itpSupport"] = o.ItpSupport
	}
	toSerialize["clientId"] = o.ClientId
	toSerialize["connectorId"] = o.ConnectorId
	return toSerialize, nil
}

func (o *GetSignInExperienceConfig200ResponseGoogleOneTap) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"clientId",
		"connectorId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSignInExperienceConfig200ResponseGoogleOneTap := _GetSignInExperienceConfig200ResponseGoogleOneTap{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetSignInExperienceConfig200ResponseGoogleOneTap)

	if err != nil {
		return err
	}

	*o = GetSignInExperienceConfig200ResponseGoogleOneTap(varGetSignInExperienceConfig200ResponseGoogleOneTap)

	return err
}

type NullableGetSignInExperienceConfig200ResponseGoogleOneTap struct {
	value *GetSignInExperienceConfig200ResponseGoogleOneTap
	isSet bool
}

func (v NullableGetSignInExperienceConfig200ResponseGoogleOneTap) Get() *GetSignInExperienceConfig200ResponseGoogleOneTap {
	return v.value
}

func (v *NullableGetSignInExperienceConfig200ResponseGoogleOneTap) Set(val *GetSignInExperienceConfig200ResponseGoogleOneTap) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSignInExperienceConfig200ResponseGoogleOneTap) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSignInExperienceConfig200ResponseGoogleOneTap) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSignInExperienceConfig200ResponseGoogleOneTap(val *GetSignInExperienceConfig200ResponseGoogleOneTap) *NullableGetSignInExperienceConfig200ResponseGoogleOneTap {
	return &NullableGetSignInExperienceConfig200ResponseGoogleOneTap{value: val, isSet: true}
}

func (v NullableGetSignInExperienceConfig200ResponseGoogleOneTap) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSignInExperienceConfig200ResponseGoogleOneTap) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


