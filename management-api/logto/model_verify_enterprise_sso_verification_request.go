/*
Logto API references

API references for Logto services.  Note: The documentation is for Logto Cloud. If you are using Logto OSS, please refer to the response of `/api/swagger.json` endpoint on your Logto instance.

API version: Cloud
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package logto

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the VerifyEnterpriseSsoVerificationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VerifyEnterpriseSsoVerificationRequest{}

// VerifyEnterpriseSsoVerificationRequest struct for VerifyEnterpriseSsoVerificationRequest
type VerifyEnterpriseSsoVerificationRequest struct {
	// Arbitrary data returned by the SSO provider to complete the verification process.
	ConnectorData map[string]interface{} `json:"connectorData"`
	// The ID of the EnterpriseSSO verification record.
	VerificationId string `json:"verificationId"`
}

type _VerifyEnterpriseSsoVerificationRequest VerifyEnterpriseSsoVerificationRequest

// NewVerifyEnterpriseSsoVerificationRequest instantiates a new VerifyEnterpriseSsoVerificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVerifyEnterpriseSsoVerificationRequest(connectorData map[string]interface{}, verificationId string) *VerifyEnterpriseSsoVerificationRequest {
	this := VerifyEnterpriseSsoVerificationRequest{}
	this.ConnectorData = connectorData
	this.VerificationId = verificationId
	return &this
}

// NewVerifyEnterpriseSsoVerificationRequestWithDefaults instantiates a new VerifyEnterpriseSsoVerificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVerifyEnterpriseSsoVerificationRequestWithDefaults() *VerifyEnterpriseSsoVerificationRequest {
	this := VerifyEnterpriseSsoVerificationRequest{}
	return &this
}

// GetConnectorData returns the ConnectorData field value
func (o *VerifyEnterpriseSsoVerificationRequest) GetConnectorData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.ConnectorData
}

// GetConnectorDataOk returns a tuple with the ConnectorData field value
// and a boolean to check if the value has been set.
func (o *VerifyEnterpriseSsoVerificationRequest) GetConnectorDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.ConnectorData, true
}

// SetConnectorData sets field value
func (o *VerifyEnterpriseSsoVerificationRequest) SetConnectorData(v map[string]interface{}) {
	o.ConnectorData = v
}

// GetVerificationId returns the VerificationId field value
func (o *VerifyEnterpriseSsoVerificationRequest) GetVerificationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VerificationId
}

// GetVerificationIdOk returns a tuple with the VerificationId field value
// and a boolean to check if the value has been set.
func (o *VerifyEnterpriseSsoVerificationRequest) GetVerificationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VerificationId, true
}

// SetVerificationId sets field value
func (o *VerifyEnterpriseSsoVerificationRequest) SetVerificationId(v string) {
	o.VerificationId = v
}

func (o VerifyEnterpriseSsoVerificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VerifyEnterpriseSsoVerificationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["connectorData"] = o.ConnectorData
	toSerialize["verificationId"] = o.VerificationId
	return toSerialize, nil
}

func (o *VerifyEnterpriseSsoVerificationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"connectorData",
		"verificationId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVerifyEnterpriseSsoVerificationRequest := _VerifyEnterpriseSsoVerificationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varVerifyEnterpriseSsoVerificationRequest)

	if err != nil {
		return err
	}

	*o = VerifyEnterpriseSsoVerificationRequest(varVerifyEnterpriseSsoVerificationRequest)

	return err
}

type NullableVerifyEnterpriseSsoVerificationRequest struct {
	value *VerifyEnterpriseSsoVerificationRequest
	isSet bool
}

func (v NullableVerifyEnterpriseSsoVerificationRequest) Get() *VerifyEnterpriseSsoVerificationRequest {
	return v.value
}

func (v *NullableVerifyEnterpriseSsoVerificationRequest) Set(val *VerifyEnterpriseSsoVerificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableVerifyEnterpriseSsoVerificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableVerifyEnterpriseSsoVerificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVerifyEnterpriseSsoVerificationRequest(val *VerifyEnterpriseSsoVerificationRequest) *NullableVerifyEnterpriseSsoVerificationRequest {
	return &NullableVerifyEnterpriseSsoVerificationRequest{value: val, isSet: true}
}

func (v NullableVerifyEnterpriseSsoVerificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVerifyEnterpriseSsoVerificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


